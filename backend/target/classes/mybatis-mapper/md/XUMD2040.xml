<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMD2040">
   <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
      SELECT A.COMPANY_CD
     , A.COMPANY_NM
     , A.DIVISION_CD
     , A.DIVISION_NM
     , A.ITEM_ID
     , A.ITEM_NM
     , A.UNIT_CATEGORY
     , A.UNIT_CATEGORY_NM     
     , A.UNIT
     , A.UNIT_NM
     , A.CONVERSION_UNIT
     , A.CONVERSION_UNIT_NM
     , A.UNIT_QTY
     , A.CONVERSION_UNIT_QTY
     , A.USE_YN
     , A.DESCRIPTION
     , A.UPDATE_BY
     , A.UPDATEBYNM
     , A.UPDATE_DATE
     , A.ITEM_ID|| '_'|| A.UNIT_CATEGORY || '_'|| A.UNIT || '_' || A.CONVERSION_UNIT AS KEY_ID  
FROM  ( SELECT MCD.COMPANY_CD
             , MCD.COMPANY_NM
             , MCD.DIVISION_CD
             , MCD.DIVISION_NM
             , MIUR.ITEM_ID
             , MI.ITEM_NM
             , MUP.UNIT_CATEGORY
             , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MIUR.COMPANY_CD,MIUR.DIVISION_CD, 'SM0016', MUP.UNIT_CATEGORY, 'KR') FROM DUAL) AS UNIT_CATEGORY_NM 
             , MIUR.UNIT
             , MUP.UNIT_NM
             , MIUR.CONVERSION_UNIT
             , MUC.UNIT_NM          AS CONVERSION_UNIT_NM
             , MIUR.UNIT_QTY
             , MIUR.CONVERSION_UNIT_QTY
             , MIUR.USE_YN
             , MIUR.DESCRIPTION
             , MIUR.UPDATE_BY
             , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MIUR.COMPANY_CD, MIUR.DIVISION_CD, MIUR.UPDATE_BY) FROM DUAL ) AS UPDATEBYNM
             , MIUR.UPDATE_DATE
        FROM   MOM_COM_DIV_V MCD
             , MOM_ITEM_UNIT_REL MIUR
             , MOM_ITEM MI
             , MOM_UNIT MUP
             , MOM_UNIT MUC
        WHERE  MCD.COMPANY_CD      = MIUR.COMPANY_CD
        AND    MCD.DIVISION_CD     = MIUR.DIVISION_CD
        AND    MIUR.COMPANY_CD     = MI.COMPANY_CD
        AND    MIUR.DIVISION_CD    = MI.DIVISION_CD
        AND    MIUR.ITEM_ID        = MI.ITEM_ID
        AND    MIUR.COMPANY_CD     = MUP.COMPANY_CD
        AND    MIUR.DIVISION_CD    = MUP.DIVISION_CD
        AND    MIUR.UNIT           = MUP.UNIT
        AND    MIUR.COMPANY_CD     = MUC.COMPANY_CD
        AND    MIUR.DIVISION_CD    = MUC.DIVISION_CD
        AND    MIUR.CONVERSION_UNIT  = MUC.UNIT 
        AND    MCD.COMPANY_CD  = #{companyCd,  jdbcType=VARCHAR}
	    AND    MCD.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}  
       <if test="itemId != null and itemId != ''">
	   AND (MI.ITEM_ID LIKE '%' || TRIM(UPPER(#{itemId, jdbcType=VARCHAR})) || '%' )
	   </if>
	   <if test="itemNm != null and itemNm != ''">
	   AND (MI.ITEM_NM LIKE '%' || TRIM(UPPER(#{itemNm, jdbcType=VARCHAR})) || '%' )
	   </if>
	   <if test="unitCategory != null and unitCategory != ''">
	   AND  MUP.UNIT_CATEGORY = #{unitCategory, jdbcType=VARCHAR}
	   </if>
	   <if test="unit != null and unit != ''">
	   AND  MIUR.UNIT IN (${unit})
	   </if>
	   <if test="conversionUnit != null and conversionUnit != ''">
	   AND  MIUR.CONVERSION_UNIT IN (${conversionUnit})
	   </if>
           ) A 
		ORDER BY A.COMPANY_NM
		       , A.DIVISION_NM
		       , A.ITEM_ID
		       , A.UNIT_CATEGORY_NM
		       , A.UNIT_NM
		       , A.CONVERSION_UNIT_NM
	</select>
	<select id="get_findBtn2" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">   
   SELECT A.UNIT_CATEGORY_NM          -- 단위유형명    
     , A.UNIT_NM                                      -- 기준단위명                                        
     , A.CONVERSION_UNIT_NM            -- 변환단위명
     , A.UNIT_QTY                                      -- 기준계수
     , A.CONVERSION_UNIT_QTY           -- 변환계수
     , A.UNIT_CATEGORY                          -- 단위유형 
     , A.UNIT                                                -- 기준단위
     , A.CONVERSION_UNIT                     -- 변환단위
     , A.KEY_ID 
FROM   (SELECT (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MC.COMPANY_CD,MC.DIVISION_CD, 'SM0016', MUP.UNIT_CATEGORY, 'KR') FROM DUAL) AS UNIT_CATEGORY_NM 
             , MUP.UNIT_NM         
             , MUC.UNIT_NM             AS CONVERSION_UNIT_NM  
             , MC.UNIT_QTY                               
             , MC.CONVERSION_UNIT_QTY                    
             , MUP.UNIT_CATEGORY                         
             , MC.UNIT                                   
             , MC.CONVERSION_UNIT         
             , MUP.UNIT_CATEGORY || '_'|| MC.UNIT || '_' || MC.CONVERSION_UNIT AS KEY_ID                
        FROM   MOM_UNIT_CONVERSION MC
             , MOM_UNIT MUP
             , MOM_UNIT MUC
        WHERE  MC.COMPANY_CD       = MUP.COMPANY_CD
        AND    MC.DIVISION_CD      = MUP.DIVISION_CD
        AND    MC.UNIT             = MUP.UNIT
        AND    MC.COMPANY_CD       = MUC.COMPANY_CD
        AND    MC.DIVISION_CD      = MUC.DIVISION_CD
        AND    MC.COMPANY_CD  = #{companyCd,  jdbcType=VARCHAR}
	    AND    MC.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}  
        <if test="keyId1 != null and keyId1 != ''">
	    AND    MUP.UNIT_CATEGORY = #{keyId1, jdbcType=VARCHAR}
	    </if>
        AND    MC.CONVERSION_UNIT  = MUC.UNIT  ) A
ORDER BY A.UNIT_CATEGORY_NM        
       , A.UNIT_NM
       , A.CONVERSION_UNIT_NM

</select>
  <insert id="create_createBtn1" parameterType="java.util.List">
   <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
     INTO MOM_ITEM_UNIT_REL (
                  COMPANY_CD
                , DIVISION_CD
                , ITEM_ID
                , UNIT
                , CONVERSION_UNIT
                , UNIT_QTY
                , CONVERSION_UNIT_QTY
                , USE_YN
                , DESCRIPTION
                , CREATE_BY
                , CREATE_DATE
                , UPDATE_BY
                , UPDATE_DATE )
      VALUES 
              (   #{item.companyCd, jdbcType=VARCHAR}
                , #{item.divisionCd, jdbcType=VARCHAR}
                , #{item.itemId, jdbcType=VARCHAR}
                , #{item.unit, jdbcType=VARCHAR}
                , #{item.conversionUnit, jdbcType=VARCHAR}
                , #{item.unitQty, jdbcType=NUMERIC}
                , #{item.conversionUnitQty, jdbcType=NUMERIC}
                , #{item.useYn, jdbcType=VARCHAR}
                , #{item.description, jdbcType=VARCHAR}
                , #{item.userId, jdbcType=VARCHAR}
                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                , #{item.userId, jdbcType=VARCHAR}
                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
              )
   </foreach>
  </insert>
  <update id="modify_editBtn1" parameterType="java.util.List">
    <foreach collection="list" item="item" separator=";" open="DECLARE BEGIN" close=";END;">
      UPDATE MOM_ITEM_UNIT_REL
      SET    COMPANY_CD = #{item.companyCd, jdbcType=VARCHAR}
           , DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
           , ITEM_ID = #{item.itemId, jdbcType=VARCHAR}
           , UNIT = #{item.unit, jdbcType=VARCHAR}
           , CONVERSION_UNIT = #{item.conversionUnit, jdbcType=VARCHAR}
           , UNIT_QTY = #{item.unitQty, jdbcType=NUMERIC}
           , CONVERSION_UNIT_QTY = #{item.conversionUnitQty, jdbcType=NUMERIC}
           , USE_YN = #{item.useYn, jdbcType=VARCHAR}
           , DESCRIPTION = #{item.description, jdbcType=VARCHAR}
           , UPDATE_BY = #{item.userId, jdbcType=VARCHAR}
           , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
      WHERE  1=1
      AND    COMPANY_CD = #{item.companyCd, jdbcType=VARCHAR}
      AND    DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
      AND    ITEM_ID = #{item.itemId, jdbcType=VARCHAR}
      AND    UNIT = #{item.unit, jdbcType=VARCHAR}
      AND    CONVERSION_UNIT = #{item.conversionUnit, jdbcType=VARCHAR}
    </foreach>
  </update>
  <delete id="remove_delBtn1" parameterType="java.util.List">
      DELETE FROM MOM_ITEM_UNIT_REL
      <where>
       <foreach collection="list" item="item" open="" close="" separator="OR">
        (       COMPANY_CD = #{item.companyCd, jdbcType=VARCHAR}
           AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
           AND  ITEM_ID = #{item.itemId, jdbcType=VARCHAR}
           AND  UNIT = #{item.unit, jdbcType=VARCHAR}
           AND  CONVERSION_UNIT = #{item.conversionUnit, jdbcType=VARCHAR}
        )
       </foreach>
      </where>
  </delete>
<insert id="upsert_defaultInfo1" parameterType="java.util.HashMap" flushCache="true">
      MERGE INTO MOM_ITEM_UNIT_REL A
            USING( 
                     SELECT #{companyCd, jdbcType=VARCHAR} as companyCd,
                            #{divisionCd, jdbcType=VARCHAR} as divisionCd,
                            #{itemId, jdbcType=VARCHAR} as itemId,
                            #{unit, jdbcType=VARCHAR} as unit,
                            #{conversionUnit, jdbcType=VARCHAR} as conversionUnit,
                            #{unitQty, jdbcType=NUMERIC} as unitQty,
                            #{conversionUnitQty, jdbcType=NUMERIC} as conversionUnitQty,
                            #{useYn, jdbcType=VARCHAR} as useYn,
                            #{description, jdbcType=VARCHAR} as description,
                            #{userId, jdbcType=VARCHAR} as createBy,
                            MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{companyCd, jdbcType=VARCHAR},#{divisionCd, jdbcType=VARCHAR}) as createDate,
                            #{userId, jdbcType=VARCHAR} as updateBy,
                            MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{companyCd, jdbcType=VARCHAR},#{divisionCd, jdbcType=VARCHAR}) as updateDate
                     FROM DUAL
                   ) PARAM
            ON ( A.COMPANY_CD = PARAM.companyCd AND
                 A.DIVISION_CD = PARAM.divisionCd AND
                 A.ITEM_ID = PARAM.itemId AND
                 A.UNIT = PARAM.unit AND
                 A.CONVERSION_UNIT = PARAM.conversionUnit )
            WHEN MATCHED THEN 
                 UPDATE SET UNIT_QTY = PARAM.unitQty
                          , CONVERSION_UNIT_QTY = PARAM.conversionUnitQty
                          , USE_YN = PARAM.useYn
                          , DESCRIPTION = PARAM.description
                          , CREATE_BY = PARAM.createBy
                          , CREATE_DATE = PARAM.createDate
                          , UPDATE_BY = PARAM.updateBy
                          , UPDATE_DATE = PARAM.updateDate
            WHEN NOT MATCHED THEN
                     INSERT ( COMPANY_CD
                            , DIVISION_CD
                            , ITEM_ID
                            , UNIT
                            , CONVERSION_UNIT
                            , UNIT_QTY
                            , CONVERSION_UNIT_QTY
                            , USE_YN
                            , DESCRIPTION
                            , CREATE_BY
                            , CREATE_DATE
                            , UPDATE_BY
                            , UPDATE_DATE )
                     VALUES ( PARAM.companyCd
                            , PARAM.divisionCd
                            , PARAM.itemId
                            , PARAM.unit
                            , PARAM.conversionUnit
                            , PARAM.unitQty
                            , PARAM.conversionUnitQty
                            , PARAM.useYn
                            , PARAM.description
                            , PARAM.createBy
                            , PARAM.createDate
                            , PARAM.updateBy
                            , PARAM.updateDate )
  </insert>
  </mapper>    