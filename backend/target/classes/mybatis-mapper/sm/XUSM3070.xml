<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUSM3070">
  <select id="get_findBtn1" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">
	  SELECT   MCD.COMPANY_CD
		     , MCD.COMPANY_NM
		     , MCD.DIVISION_CD
		     , MCD.DIVISION_NM
		     , MIC.IL_GROUP_CD 
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MIC.COMPANY_CD,MIC.DIVISION_CD, 'SM0018', MIC.IL_GROUP_CD, 'KR') FROM DUAL) AS IL_GROUP_NM        
		     , MIC.IL_TYPE 
		     , MIC.IL_TYPE_NM 
		     , MIC.USE_YN
		     , MIC.DESCRIPTION
		     , MIC.UPDATE_BY
		     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MIC.COMPANY_CD, MIC.DIVISION_CD, MIC.UPDATE_BY) FROM DUAL ) AS UPDATE_BY_NM
		     , TO_CHAR(MIC.UPDATE_DATE,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
		     ,  MIC.IL_GROUP_CD ||'_'|| MIC.IL_TYPE AS KEY_ID 
     FROM      MOM_COM_DIV_V MCD
		     , MOM_IL_CATEGORY MIC
	 WHERE  MCD.COMPANY_CD   = MIC.COMPANY_CD
	 AND    MCD.DIVISION_CD = MIC.DIVISION_CD
     <if test="ilGroupCd != null and ilGroupCd != ''">
	 AND MIC.IL_GROUP_CD IN (${ilGroupCd})
	 </if>
	 <if test="ilType != null and ilType != ''">
	 AND MIC.IL_TYPE  IN (${ilType})
	 </if>
	 <if test="useYn != null and useYn != ''">
	 AND MIC.USE_YN = #{useYn, jdbcType=VARCHAR}
	 </if>
     ORDER BY MCD.COMPANY_NM, MCD.DIVISION_NM, MIC.IL_TYPE_NM 				
  </select>
  <insert id="create_createBtn1" parameterType="java.util.List">
    <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
     INTO MOM_IL_CATEGORY (
                  COMPANY_CD
                , DIVISION_CD
                , IL_GROUP_CD
                , IL_TYPE
                , IL_TYPE_NM
                , USE_YN
                , DESCRIPTION
                , CREATE_BY
                , CREATE_DATE
                , UPDATE_BY
                , UPDATE_DATE )
      VALUES 
              (   #{item.companyCd, jdbcType=VARCHAR}
                , #{item.divisionCd, jdbcType=VARCHAR}
                , #{item.ilGroupCd, jdbcType=VARCHAR}
                , #{item.ilType, jdbcType=VARCHAR}
                , #{item.ilTypeNm, jdbcType=VARCHAR}
                , #{item.useYn, jdbcType=VARCHAR}
                , #{item.description, jdbcType=VARCHAR}
                , #{item.userId, jdbcType=VARCHAR}
                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                , #{item.userId, jdbcType=VARCHAR}
                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
              )
    </foreach>
  </insert>
  <insert id="create_copyBtn1" parameterType="java.util.List">
    <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
     INTO MOM_IL_CATEGORY (
                  COMPANY_CD
                , DIVISION_CD
                , IL_GROUP_CD
                , IL_TYPE
                , IL_TYPE_NM
                , USE_YN
                , DESCRIPTION
                , CREATE_BY
                , CREATE_DATE
                , UPDATE_BY
                , UPDATE_DATE )
      VALUES 
              (   #{item.companyCd, jdbcType=VARCHAR}
                , #{item.divisionCd, jdbcType=VARCHAR}
                , #{item.ilGroupCd, jdbcType=VARCHAR}
                , #{item.ilType, jdbcType=VARCHAR}
                , #{item.ilTypeNm, jdbcType=VARCHAR}
                , #{item.useYn, jdbcType=VARCHAR}
                , #{item.description, jdbcType=VARCHAR}
                , #{item.userId, jdbcType=VARCHAR}
                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                , #{item.userId, jdbcType=VARCHAR}
                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
              )
    </foreach>
  </insert>
  <update id="modify_editBtn1" parameterType="java.util.List">
    <foreach collection="list" item="item" separator=";" open="DECLARE BEGIN" close=";END;">
      UPDATE MOM_IL_CATEGORY
      SET    COMPANY_CD = #{item.companyCd, jdbcType=VARCHAR}
           , DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
           , IL_GROUP_CD = #{item.ilGroupCd, jdbcType=VARCHAR}
           , IL_TYPE = #{item.ilType, jdbcType=VARCHAR}
           , IL_TYPE_NM = #{item.ilTypeNm, jdbcType=VARCHAR}
           , USE_YN = #{item.useYn, jdbcType=VARCHAR}
           , DESCRIPTION = #{item.description, jdbcType=VARCHAR}
           , UPDATE_BY = #{item.userId, jdbcType=VARCHAR}
           , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
      WHERE  1=1
      AND    COMPANY_CD = #{item.companyCd, jdbcType=VARCHAR}
      AND    DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
      AND    IL_TYPE = #{item.ilType, jdbcType=VARCHAR}
    </foreach>
  </update>
  <delete id="remove_delBtn1" parameterType="java.util.List">
      DELETE FROM MOM_IL_CATEGORY
      <where>
       <foreach collection="list" item="item" open="" close="" separator="OR">
        (       COMPANY_CD = #{item.companyCd, jdbcType=VARCHAR}
           AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
           AND  IL_GROUP_CD = #{item.ilGroupCd, jdbcType=VARCHAR}
        )
       </foreach>
      </where>
  </delete>
   <insert id="upsert_defaultInfo1" parameterType="java.util.HashMap" flushCache="true">
      MERGE INTO MOM_IL_CATEGORY A
            USING( 
                     SELECT #{companyCd, jdbcType=VARCHAR} as companyCd,
                            #{divisionCd, jdbcType=VARCHAR} as divisionCd,
                            #{ilGroupCd, jdbcType=VARCHAR} as ilGroupCd,
                            #{ilType, jdbcType=VARCHAR} as ilType,
                            #{ilTypeNm, jdbcType=VARCHAR} as ilTypeNm,
                            #{useYn, jdbcType=VARCHAR} as useYn,
                            #{description, jdbcType=VARCHAR} as description,
                            #{userId, jdbcType=VARCHAR} as createBy,
                            MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{companyCd, jdbcType=VARCHAR},#{divisionCd, jdbcType=VARCHAR}) as createDate,
                            #{userId, jdbcType=VARCHAR} as updateBy,
                            MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{companyCd, jdbcType=VARCHAR},#{divisionCd, jdbcType=VARCHAR}) as updateDate
                     FROM DUAL
                   ) PARAM
            ON ( A.COMPANY_CD = PARAM.companyCd AND
                 A.DIVISION_CD = PARAM.divisionCd AND
                 A.IL_TYPE = PARAM.ilType )
            WHEN MATCHED THEN 
                 UPDATE SET IL_GROUP_CD = PARAM.ilGroupCd
                          , IL_TYPE_NM = PARAM.ilTypeNm
                          , USE_YN = PARAM.useYn
                          , DESCRIPTION = PARAM.description
                          , CREATE_BY = PARAM.createBy
                          , CREATE_DATE = PARAM.createDate
                          , UPDATE_BY = PARAM.updateBy
                          , UPDATE_DATE = PARAM.updateDate
            WHEN NOT MATCHED THEN
                     INSERT ( COMPANY_CD
                            , DIVISION_CD
                            , IL_GROUP_CD
                            , IL_TYPE
                            , IL_TYPE_NM
                            , USE_YN
                            , DESCRIPTION
                            , CREATE_BY
                            , CREATE_DATE
                            , UPDATE_BY
                            , UPDATE_DATE )
                     VALUES ( PARAM.companyCd
                            , PARAM.divisionCd
                            , PARAM.ilGroupCd
                            , PARAM.ilType
                            , PARAM.ilTypeNm
                            , PARAM.useYn
                            , PARAM.description
                            , PARAM.createBy
                            , PARAM.createDate
                            , PARAM.updateBy
                            , PARAM.updateDate )
  </insert>
</mapper>
