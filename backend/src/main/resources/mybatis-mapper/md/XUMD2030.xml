<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMD2030">
   <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
       SELECT MCD.COMPANY_CD
		    , MCD.COMPANY_NM
		    , MCIM.CUSTOMER_CD ||'_'|| MCIM.CUSTOMER_ITEM_ID || '_' || MCIM.ITEM_ID AS KEY_ID
		    , MCD.DIVISION_CD
		    , MCD.DIVISION_NM
		    , MCIM.CUSTOMER_CD
		    , (SELECT MOM_COMMON_PKG.FN_GET_PARTNER_NAME(MCIM.COMPANY_CD, MCIM.DIVISION_CD, MCIM.CUSTOMER_CD) FROM DUAL ) AS CUSTOMER_NM
		    , MCIM.CUSTOMER_ITEM_ID 
		    , MCIM.ITEM_ID
		    , MCIM.REQ_QTY
		    , MI.ITEM_NM
		    , MI.UNIT
		    , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD,MI.DIVISION_CD, 'MD0003', MI.UNIT, 'KR') FROM DUAL) AS UNIT_NM          
		    , MI.ITEM_TYPE
		    , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD,MI.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, 'KR') FROM DUAL) AS ITEM_TYPE_NM     
		    , MI.ITEM_SPEC
		    , MCIM.USE_YN
		    , MCIM.DESCRIPTION
		    , MCIM.UPDATE_BY
		    , MI.LOT_MANAGEMENT_YN
		    , MI.PRICE_SYNC_YN  
		    , MI.PO_OVER_RECEIPT_RATE 
		    , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MI.COMPANY_CD, MI.DIVISION_CD, MI.UPDATE_BY) FROM DUAL ) AS UPDATEBYNM
		    , MCIM.UPDATE_DATE
            , ROWIDTOCHAR(MI.ROWID) AS GRID_ID
	   FROM   MOM_COM_DIV_V MCD
            , MOM_CUSTOMER_ITEM_MAPPING MCIM
    	    , MOM_ITEM MI
	   WHERE  MCD.COMPANY_CD    = MCIM.COMPANY_CD
	   AND    MCD.DIVISION_CD   = MCIM.DIVISION_CD
	   AND    MCIM.COMPANY_CD   = MI.COMPANY_CD
	   AND    MCIM.DIVISION_CD  = MI.DIVISION_CD
	   AND    MCIM.ITEM_ID      = MI.ITEM_ID
	   AND    MCIM.COMPANY_CD   = #{companyCd,  jdbcType=VARCHAR}
	   AND    MCIM.DIVISION_CD  = #{divisionCd, jdbcType=VARCHAR}  	
	   <if test="customerCd != null and customerCd != ''">
	   AND MCIM.CUSTOMER_CD = #{customerCd, jdbcType=VARCHAR}
	   </if>
	   <if test="customerItemId != null and customerItemId != ''">
	   AND (UPPER(MCIM.CUSTOMER_ITEM_ID) LIKE '%' || UPPER(#{customerItemId, jdbcType=VARCHAR}) || '%' )
	   </if>
	   <if test="itemId != null and itemId != ''">
	   AND (UPPER(MCIM.ITEM_ID) LIKE '%' || TRIM(UPPER(#{itemId, jdbcType=VARCHAR})) || '%' )
	   </if>
	   <if test="useYn != null and useYn != ''">
	   AND MCIM.USE_YN = #{useYn, jdbcType=VARCHAR}
	   </if>
	   ORDER BY  MI.ITEM_NM
	</select>
    <insert id="create_createBtn1" parameterType="java.util.List">
         INSERT INTO MOM_CUSTOMER_ITEM_MAPPING (
                     COMPANY_CD
                  ,  DIVISION_CD
                  ,  CUSTOMER_CD
                  ,  CUSTOMER_ITEM_ID
                  ,  ITEM_ID
                  ,  REQ_QTY
                  ,  USE_YN
                  ,  DESCRIPTION
                  ,  CREATE_BY
                  ,  CREATE_DATE
                  ,  UPDATE_BY
                  ,  UPDATE_DATE )
         VALUES <foreach item="item" collection="list" index="i" separator=" " open="">
                  (   #{item.companyCd, jdbcType=VARCHAR}
                  ,   #{item.divisionCd, jdbcType=VARCHAR}
                  ,   #{item.customerCd, jdbcType=VARCHAR}
                  ,   #{item.customerItemId, jdbcType=VARCHAR}
                  ,   #{item.itemId, jdbcType=VARCHAR}
                  ,   #{item.reqQty, jdbcType=NUMERIC}
                  ,   #{item.useYn, jdbcType=VARCHAR}
                  ,   #{item.description, jdbcType=VARCHAR}
                  ,   #{item.userId, jdbcType=VARCHAR}
                  ,   MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                  ,   #{item.userId, jdbcType=VARCHAR}
                  ,   MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                  )
                </foreach>
  </insert>	
     <insert id="create_copyBtn1" parameterType="java.util.List">
         INSERT INTO MOM_CUSTOMER_ITEM_MAPPING (
                     COMPANY_CD
                  ,  DIVISION_CD
                  ,  CUSTOMER_CD
                  ,  CUSTOMER_ITEM_ID
                  ,  ITEM_ID
                  ,  REQ_QTY
                  ,  USE_YN
                  ,  DESCRIPTION
                  ,  CREATE_BY
                  ,  CREATE_DATE
                  ,  UPDATE_BY
                  ,  UPDATE_DATE )
         VALUES <foreach item="item" collection="list" index="i" separator=" " open="">
                  (   #{item.companyCd, jdbcType=VARCHAR}
                  ,   #{item.divisionCd, jdbcType=VARCHAR}
                  ,   #{item.customerCd, jdbcType=VARCHAR}
                  ,   #{item.customerItemId, jdbcType=VARCHAR}
                  ,   #{item.itemId, jdbcType=VARCHAR}
                  ,   #{item.reqQty, jdbcType=NUMERIC}
                  ,   #{item.useYn, jdbcType=VARCHAR}
                  ,   #{item.description, jdbcType=VARCHAR}
                  ,   #{item.userId, jdbcType=VARCHAR}
                  ,   MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                  ,   #{item.userId, jdbcType=VARCHAR}
                  ,   MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                  )
                </foreach>
  </insert>	
  <update id="modify_editBtn1" parameterType="java.util.List">
    <foreach collection="list" item="item" separator=";" open="DECLARE BEGIN" close=";END;">
      UPDATE MOM_CUSTOMER_ITEM_MAPPING
      SET    COMPANY_CD = #{item.companyCd, jdbcType=VARCHAR}
          ,  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
          ,  CUSTOMER_CD = #{item.customerCd, jdbcType=VARCHAR}
          ,  CUSTOMER_ITEM_ID = #{item.customerItemId, jdbcType=VARCHAR}
          ,  ITEM_ID = #{item.itemId, jdbcType=VARCHAR}
          ,  REQ_QTY = #{item.reqQty, jdbcType=NUMERIC}
          ,  USE_YN = #{item.useYn, jdbcType=VARCHAR}
          ,  DESCRIPTION = #{item.description, jdbcType=VARCHAR}
          ,  UPDATE_BY = #{item.userId, jdbcType=VARCHAR}
          ,  UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
      WHERE 1=1
      AND   COMPANY_CD        = TRIM(#{item.companyCd,      jdbcType=VARCHAR})
      AND   DIVISION_CD       = TRIM(#{item.divisionCd,     jdbcType=VARCHAR}) 
      AND   CUSTOMER_CD       = TRIM(#{item.customerCd,     jdbcType=VARCHAR})      
      AND   CUSTOMER_ITEM_ID  = TRIM(#{item.customerItemId, jdbcType=VARCHAR})   
      AND   ITEM_ID           = TRIM(#{item.itemId,         jdbcType=VARCHAR})   

    </foreach>
  </update>
  <delete id="remove_delBtn1" parameterType="java.util.List"> 
	   DELETE
	   FROM    MOM_CUSTOMER_ITEM_MAPPING
       <where> 
        <foreach collection="list" item="item" open="" close="" separator="OR"> 
          (   
	            COMPANY_CD        = TRIM(#{item.companyCd,      jdbcType=VARCHAR})
	      AND   DIVISION_CD       = TRIM(#{item.divisionCd,     jdbcType=VARCHAR}) 
	      AND   CUSTOMER_CD       = TRIM(#{item.customerCd,     jdbcType=VARCHAR})      
	      AND   CUSTOMER_ITEM_ID  = TRIM(#{item.customerItemId, jdbcType=VARCHAR})   
	      AND   ITEM_ID           = TRIM(#{item.itemId,         jdbcType=VARCHAR})   
          )
        </foreach>
       </where>
   </delete>
   <insert id="upsert_excelUpBtn1" parameterType="java.util.HashMap" flushCache="true">
      MERGE INTO MOM_CUSTOMER_ITEM_MAPPING 
            USING( <foreach item="item" collection="list" index="i" separator="UNION" open="" close="">
                     SELECT #{companyCd, jdbcType=VARCHAR} as companyCd,
                            #{divisionCd, jdbcType=VARCHAR} as divisionCd,
                            #{customerCd, jdbcType=VARCHAR} as customerCd,
                            #{customerItemId, jdbcType=VARCHAR} as customerItemId,
                            #{itemId, jdbcType=VARCHAR} as itemId,
                            #{reqQty, jdbcType=NUMERIC} as reqQty,
                            #{useYn, jdbcType=VARCHAR} as useYn,
                            #{description, jdbcType=VARCHAR} as description,
                            #{userId, jdbcType=VARCHAR} as createBy,
                            MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{companyCd, jdbcType=VARCHAR},#{divisionCd, jdbcType=VARCHAR}) as createDate,
                            #{userId, jdbcType=VARCHAR} as updateBy,
                            MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{companyCd, jdbcType=VARCHAR},#{divisionCd, jdbcType=VARCHAR}) as updateDate
                     FROM DUAL
                   </foreach> ) PARAM
            ON ( COMPANY_CD = PARAM.companyCd AND
                 DIVISION_CD = PARAM.divisionCd AND
                 CUSTOMER_CD = PARAM.customerCd AND
                 CUSTOMER_ITEM_ID = PARAM.customerItemId AND
                 ITEM_ID = PARAM.itemId )
            WHEN MATCHED THEN 
                 UPDATE SET REQ_QTY = PARAM.reqQty
                          , USE_YN = PARAM.useYn
                          , DESCRIPTION = PARAM.description
                          , CREATE_BY = PARAM.createBy
                          , CREATE_DATE = PARAM.createDate
                          , UPDATE_BY = PARAM.updateBy
                          , UPDATE_DATE = PARAM.updateDate
            WHEN NOT MATCHED THEN
                     INSERT ( COMPANY_CD
                            , DIVISION_CD
                            , CUSTOMER_CD
                            , CUSTOMER_ITEM_ID
                            , ITEM_ID
                            , REQ_QTY
                            , USE_YN
                            , DESCRIPTION
                            , CREATE_BY
                            , CREATE_DATE
                            , UPDATE_BY
                            , UPDATE_DATE )
                     VALUES ( PARAM.companyCd
                            , PARAM.divisionCd
                            , PARAM.customerCd
                            , PARAM.customerItemId
                            , PARAM.itemId
                            , PARAM.reqQty
                            , PARAM.useYn
                            , PARAM.description
                            , PARAM.createBy
                            , PARAM.createDate
                            , PARAM.updateBy
                            , PARAM.updateDate )
  </insert>   
</mapper>