<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMD5060">
    <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	    <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
	        SELECT A.*
	        FROM   (
	    </if>
	                SELECT MIS.COMPANY_CD
	                     , MIS.DIVISION_CD
	                     , MIS.IDENTIFICATION_STOCK_ID  AS STOCK_ID 
	                     , MIS.IDENTIFICATION_STOCK_NM  AS STOCK_NM
	                     , MIS.VENDOR_LOT_NO
	                     , TO_CHAR(MIS.EXPIRATION_DATE ,'YYYY-MM-DD') AS EXPIRATION_DATE
	                     , MIS.USE_YN
	                     , MIS.DESCRIPTION
	                     , MIS.UPDATE_BY       AS UPDATE_USER_NO
	                     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MIS.COMPANY_CD, MIS.DIVISION_CD, MIS.UPDATE_BY) FROM DUAL ) AS UPDATE_USER_NM
	                     , TO_CHAR(MIS.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
	                     , ROWIDTOCHAR(MIS.ROWID)            AS KEY_ID
	                     , COUNT(*) OVER()   AS TOTAL_COUNT
	                     , ROW_NUMBER() OVER(PARTITION BY MIS.COMPANY_CD,MIS.DIVISION_CD ORDER BY MIS.IDENTIFICATION_STOCK_NM) AS ROW_CNT
	                FROM   MOM_IDENTIFICATION_STOCK MIS
	                WHERE  MIS.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
	                AND    MIS.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}
	                <if test="StockId != null and StockId != ''">
	                AND    MIS.IDENTIFICATION_STOCK_ID LIKE '%' || UPPER(#{StockId, jdbcType=VARCHAR}) || '%' 
	                </if>
	                <if test="StockNm != null and StockNm != ''">
	                AND    MIS.IDENTIFICATION_STOCK_NM LIKE '%' || UPPER(#{StockNm, jdbcType=VARCHAR}) || '%' 
	                </if>
	                <if test="vendorLotNo != null and vendorLotNo != ''">
	                AND    MIS.VENDOR_LOT_NO LIKE '%' || UPPER(#{vendorLotNo, jdbcType=VARCHAR}) || '%' 
	                </if>
	                <if test="useYn != null and useYn != ''">
	                AND    MIS.USE_YN = #{useYn, jdbcType=VARCHAR}
	                </if>    
	    <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
	               ) A
	    WHERE ROW_CNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
	    </if>
	</select>
	<insert id="create_createBtn1" parameterType="java.util.List">
	    <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
	    INTO MOM_IDENTIFICATION_STOCK( COMPANY_CD
	                                 , DIVISION_CD
	                                 , IDENTIFICATION_STOCK_ID
	                                 , IDENTIFICATION_STOCK_NM
	                                 , VENDOR_LOT_NO
	                                 , EXPIRATION_DATE
	                                 , USE_YN
	                                 , DESCRIPTION
	                                 , CREATE_BY
	                                 , CREATE_DATE
	                                 , UPDATE_BY
	                                 , UPDATE_DATE )
	    VALUES 
	                                 ( #{item.companyCd, jdbcType=VARCHAR}
	                                 , #{item.divisionCd, jdbcType=VARCHAR}
	                                 , #{item.stockId, jdbcType=VARCHAR}
	                                 , #{item.stockNm, jdbcType=VARCHAR}
	                                 , #{item.vendorLotNo, jdbcType=VARCHAR}
	                                 , TO_DATE(#{item.expirationDate, jdbcType=VARCHAR},'YYYY-MM-DD')
	                                 , #{item.useYn, jdbcType=VARCHAR}
	                                 , #{item.description, jdbcType=VARCHAR}
	                                 , #{item.userId, jdbcType=VARCHAR}
	                                 , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
	                                 , #{item.userId, jdbcType=VARCHAR}
	                                 , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
	                                 )
	    </foreach>
	</insert>
	<update id="modify_editBtn1" parameterType="java.util.List">
	    <foreach collection="list" item="item" separator=";" open="DECLARE BEGIN" close=";END;">
	    UPDATE MOM_IDENTIFICATION_STOCK
	    SET    IDENTIFICATION_STOCK_NM = #{item.stockNm, jdbcType=VARCHAR}
	         , EXPIRATION_DATE = TO_DATE(#{item.expirationDate, jdbcType=VARCHAR},'YYYY-MM-DD')
	         , USE_YN = #{item.useYn, jdbcType=VARCHAR}
	         , DESCRIPTION = #{item.description, jdbcType=VARCHAR}
	         , UPDATE_BY = #{item.userId, jdbcType=VARCHAR}
	         , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
	    WHERE  1=1
	    AND    COMPANY_CD               = #{item.companyCd, jdbcType=VARCHAR}
	    AND    DIVISION_CD              = #{item.divisionCd, jdbcType=VARCHAR}
	    AND    IDENTIFICATION_STOCK_ID = #{item.stockId, jdbcType=VARCHAR}
	    </foreach>
	</update>
	<delete id="remove_delBtn1" parameterType="java.util.List">
	    DELETE FROM MOM_IDENTIFICATION_STOCK
	    <where>
	    <foreach collection="list" item="item" open="" close="" separator="OR">
	    (       COMPANY_CD              = #{item.companyCd, jdbcType=VARCHAR}
	       AND  DIVISION_CD             = #{item.divisionCd, jdbcType=VARCHAR}
	       AND  IDENTIFICATION_STOCK_ID = #{item.stockId, jdbcType=VARCHAR}
	    )
	   </foreach>
	  </where>
	</delete>
	<insert id="upsert_excelUpBtn1" parameterType="java.util.HashMap" flushCache="true">
	    MERGE 
	    INTO  MOM_IDENTIFICATION_STOCK 
	    USING ( SELECT #{companyCd, jdbcType=VARCHAR}      as companyCd
	                 , #{divisionCd, jdbcType=VARCHAR}     as divisionCd
	                 , #{stockId, jdbcType=VARCHAR}        as stockId
	                 , #{stockNm, jdbcType=VARCHAR}        as stockNm
	                 , #{vendorLotNo, jdbcType=VARCHAR}    as vendorLotNo
	                 , TO_DATE(#{expirationDate, jdbcType=VARCHAR},'YYYY-MM-DD')  as expirationDate
	                 , #{useYn, jdbcType=VARCHAR} as useYn
	                 , #{description, jdbcType=VARCHAR} as description
	                 , #{userId, jdbcType=VARCHAR} as createBy
	                 , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{companyCd, jdbcType=VARCHAR},#{divisionCd, jdbcType=VARCHAR}) as createDate
	                 , #{userId, jdbcType=VARCHAR} as updateBy
	                 , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{companyCd, jdbcType=VARCHAR},#{divisionCd, jdbcType=VARCHAR}) as updateDate
	            FROM DUAL
	          ) PARAM
	    ON ( COMPANY_CD              = PARAM.companyCd AND
	         DIVISION_CD             = PARAM.divisionCd AND
	         IDENTIFICATION_STOCK_ID = PARAM.stockId )
	    WHEN MATCHED THEN 
	        UPDATE 
	        SET    IDENTIFICATION_STOCK_NM = PARAM.stockNm
	             , EXPIRATION_DATE         = PARAM.expirationDate
	             , USE_YN                  = PARAM.useYn
	             , DESCRIPTION             = PARAM.description
	             , CREATE_BY               = PARAM.createBy
	             , CREATE_DATE             = PARAM.createDate
	             , UPDATE_BY               = PARAM.updateBy
	             , UPDATE_DATE             = PARAM.updateDate
	    WHEN NOT MATCHED THEN
	        INSERT ( COMPANY_CD
	               , DIVISION_CD
	               , IDENTIFICATION_STOCK_ID
	               , IDENTIFICATION_STOCK_NM
	               , VENDOR_LOT_NO
	               , EXPIRATION_DATE
	               , USE_YN
	               , DESCRIPTION
	               , CREATE_BY
	               , CREATE_DATE
	               , UPDATE_BY
	               , UPDATE_DATE )
	        VALUES ( PARAM.companyCd
	               , PARAM.divisionCd
	               , PARAM.stockId
	               , PARAM.stockNm
	               , PARAM.vendorLotNo
	               , PARAM.expirationDate
	               , PARAM.useYn
	               , PARAM.description
	               , PARAM.createBy
	               , PARAM.createDate
	               , PARAM.updateBy
	               , PARAM.updateDate )
	</insert>
</mapper> 	