<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMD1060">
  <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	SELECT MCD.COMPANY_CD
		 , MCD.COMPANY_NM
		 , MCD.DIVISION_CD
		 , MCD.DIVISION_NM
		 , MWC.WORK_GROUP_CD
		 , (SELECT MOM_COMMON_PKG.FN_GET_WORK_GROUP_NAME(MWC.COMPANY_CD, MWC.DIVISION_CD, MWC.WORK_GROUP_CD) FROM DUAL) AS WORK_GROUP_NM
		 , MWC.WORK_CENTER_CD
		 , MWC.WORK_CENTER_NM
		 , MWS.WORK_STATION_CD
		 , MWS.WORK_STATION_NM
		 , MWC.WORK_CENTER_TYPE
		 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MWC.COMPANY_CD,MWC.DIVISION_CD, 'MD0010', MWC.WORK_CENTER_TYPE, 'KR') FROM DUAL) AS WORK_CENTER_TYPE_NM  
		 , MWC.CONSUME_LOCATION_CD
		 , (SELECT MOM_COMMON_PKG.FN_GET_LOCATION_NAME(MWC.COMPANY_CD, MWC.DIVISION_CD, MWC.CONSUME_LOCATION_CD) FROM DUAL) AS CONSUME_LOCATION_NM
		 , MWC.GOOD_LOCATION_CD
		 , (SELECT MOM_COMMON_PKG.FN_GET_LOCATION_NAME(MWC.COMPANY_CD, MWC.DIVISION_CD, MWC.GOOD_LOCATION_CD) FROM DUAL) AS GOOD_LOCATION_NM
		 , MWC.DEFECT_LOCATION_CD
		 , (SELECT MOM_COMMON_PKG.FN_GET_LOCATION_NAME(MWC.COMPANY_CD, MWC.DIVISION_CD, MWC.DEFECT_LOCATION_CD) FROM DUAL) AS DFECT_LOCATION_NM
		 , MWS.USE_YN
		 , MWS.DESCRIPTION
		 , MWS.CREATE_BY
		 ,(SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MWS.COMPANY_CD, MWS.DIVISION_CD, MWS.CREATE_BY) FROM DUAL ) AS CREATE_BY_NM
		 , TO_CHAR(MWS.CREATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE
		 , MWS.UPDATE_BY
		 ,(SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MWS.COMPANY_CD, MWS.DIVISION_CD, MWS.UPDATE_BY) FROM DUAL ) AS UPDATE_BY_NM
		 , TO_CHAR(MWC.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
         , ROWIDTOCHAR(MWC.ROWID) AS GRID_ID
    FROM   MOM_COM_DIV_V MCD
         , MOM_WORK_CENTER MWC
         , MOM_WORK_STATION MWS
    WHERE  MCD.COMPANY_CD     = MWC.COMPANY_CD
	AND    MCD.DIVISION_CD    = MWC.DIVISION_CD     
	AND    MWC.COMPANY_CD     = MWS.COMPANY_CD
	AND    MWC.DIVISION_CD    = MWS.DIVISION_CD
	AND    MWC.WORK_CENTER_CD = MWS.WORK_CENTER_CD     
	AND    MCD.COMPANY_CD     = #{companyCd,  jdbcType=VARCHAR}
	AND    MCD.DIVISION_CD    = #{divisionCd, jdbcType=VARCHAR}  		
    <if test="workGroupCd != null and workGroupCd != ''">
    AND MWC.WORK_GROUP_CD = #{workGroupCd, jdbcType=VARCHAR}
	</if>
	<if test="workCenterCd != null and workCenterCd != ''">
    AND MWC.WORK_CENTER_CD = #{workCenterCd, jdbcType=VARCHAR}
	</if>
	<if test="workCenterType != null and workCenterType != ''">
    AND MWC.WORK_CENTER_TYPE IN (${workCenterType})
	</if>
	<if test="workStationCd != null and workStationCd != ''">
    AND (UPPER(MWS.WORK_STATION_CD) LIKE '%' || UPPER(#{workStationCd, jdbcType=VARCHAR}) || '%' )
	</if>
	<if test="workStationNm != null and workStationNm != ''">
    AND (MWS.WORK_STATION_NM LIKE '%' || TRIM(UPPER(#{workStationNm, jdbcType=VARCHAR})) || '%' )
	</if>
    <if test="useYn != null and useYn != ''">
    AND MWS.USE_YN = #{useYn, jdbcType=VARCHAR}
	</if>
    ORDER BY  MWS.WORK_STATION_NM						
  </select>
  <insert id="create_createBtn1" parameterType="java.util.List">
         INSERT INTO MOM_WORK_STATION (
                     COMPANY_CD
                  ,  DIVISION_CD
                  ,  WORK_CENTER_CD
                  ,  WORK_STATION_CD
                  ,  WORK_STATION_NM
                  ,  USE_YN
                  ,  DESCRIPTION
                  ,  CREATE_BY
                  ,  CREATE_DATE
                  ,  UPDATE_BY
                  ,  UPDATE_DATE )
         VALUES <foreach item="item" collection="list" index="i" separator=" " open="">
                  (  #{item.companyCd,      jdbcType=VARCHAR}
                  ,  #{item.divisionCd,     jdbcType=VARCHAR}
                  ,  #{item.workCenterCd,   jdbcType=VARCHAR}
                  ,  #{item.workStationCd,  jdbcType=VARCHAR}
                  ,  #{item.workStationNm,  jdbcType=VARCHAR}
                  ,  #{item.useYn,          jdbcType=VARCHAR}
                  ,  #{item.description,    jdbcType=VARCHAR}
                  ,  #{item.userId,         jdbcType=VARCHAR}
                  ,  MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                  ,  #{item.userId,         jdbcType=VARCHAR}
                  ,  MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                  )
                </foreach>
  </insert>
   <insert id="create_copyBtn1" parameterType="java.util.List">
         INSERT INTO MOM_WORK_STATION (
                     COMPANY_CD
                  ,  DIVISION_CD
                  ,  WORK_CENTER_CD
                  ,  WORK_STATION_CD
                  ,  WORK_STATION_NM
                  ,  USE_YN
                  ,  DESCRIPTION
                  ,  CREATE_BY
                  ,  CREATE_DATE
                  ,  UPDATE_BY
                  ,  UPDATE_DATE )
         VALUES <foreach item="item" collection="list" index="i" separator=" " open="">
                  (  #{item.companyCd,      jdbcType=VARCHAR}
                  ,  #{item.divisionCd,     jdbcType=VARCHAR}
                  ,  #{item.workCenterCd,   jdbcType=VARCHAR}
                  ,  #{item.workStationCd,  jdbcType=VARCHAR}
                  ,  #{item.workStationNm,  jdbcType=VARCHAR}
                  ,  #{item.useYn,          jdbcType=VARCHAR}
                  ,  #{item.description,    jdbcType=VARCHAR}
                  ,  #{item.userId,         jdbcType=VARCHAR}
                  ,  MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                  ,  #{item.userId,         jdbcType=VARCHAR}
                  ,  MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                  )
                </foreach>
  </insert>
  <update id="modify_editBtn1" parameterType="java.util.List">
    <foreach collection="list" item="item" separator=";" open="DECLARE BEGIN" close=";END;">
      UPDATE MOM_WORK_STATION
      SET    COMPANY_CD      = #{item.companyCd,          jdbcType=VARCHAR}
          ,  DIVISION_CD     = #{item.divisionCd,         jdbcType=VARCHAR}
          ,  WORK_CENTER_CD  = #{item.workCenterCd,       jdbcType=VARCHAR}
          ,  WORK_STATION_CD = #{item.workStationCd,      jdbcType=VARCHAR}
          ,  WORK_STATION_NM = #{item.workStationNm,      jdbcType=VARCHAR}
          ,  USE_YN          = #{item.useYn,              jdbcType=VARCHAR}
          ,  DESCRIPTION     = #{item.description,        jdbcType=VARCHAR}
          ,  UPDATE_BY       = #{item.userId,           jdbcType=VARCHAR}
          ,  UPDATE_DATE     = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
      WHERE 1=1
      AND   COMPANY_CD       = TRIM(#{item.companyCd,     jdbcType=VARCHAR})
      AND   DIVISION_CD      = TRIM(#{item.divisionCd,    jdbcType=VARCHAR})  
      AND   WORK_STATION_CD  = TRIM(#{item.workStationCd, jdbcType=VARCHAR})       
    </foreach>
  </update>
  <delete id="remove_delBtn1" parameterType="java.util.List"> 
	   DELETE
	   FROM    MOM_WORK_STATION
       <where> 
        <foreach collection="list" item="item" open="" close="" separator="OR"> 
          (   
	               COMPANY_CD        = TRIM(#{item.companyCd,     jdbcType=VARCHAR})
	         AND   DIVISION_CD       = TRIM(#{item.divisionCd,    jdbcType=VARCHAR})   
             AND   WORK_STATION_CD   = TRIM(#{item.workStationCd, jdbcType=VARCHAR})    
          )
        </foreach>
       </where>
  </delete>  
  <insert id="upsert_excelUpBtn1" parameterType="java.util.HashMap" flushCache="true">
      MERGE INTO MOM_WORK_STATION 
            USING(
                     SELECT #{companyCd, jdbcType=VARCHAR} as companyCd,
                            #{divisionCd, jdbcType=VARCHAR} as divisionCd,
                            #{workCenterCd, jdbcType=VARCHAR} as workCenterCd,
                            #{workStationCd, jdbcType=VARCHAR} as workStationCd,
                            #{workStationNm, jdbcType=VARCHAR} as workStationNm,
                            #{useYn, jdbcType=VARCHAR} as useYn,
                            #{description, jdbcType=VARCHAR} as description,
                            #{userId, jdbcType=VARCHAR} as createBy,
                            MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{companyCd, jdbcType=VARCHAR},#{divisionCd, jdbcType=VARCHAR}) as createDate,
                            #{userId, jdbcType=VARCHAR} as updateBy,
                            MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{companyCd, jdbcType=VARCHAR},#{divisionCd, jdbcType=VARCHAR}) as updateDate
                     FROM DUAL
                  ) PARAM
            ON ( COMPANY_CD = PARAM.companyCd AND
                 DIVISION_CD = PARAM.divisionCd AND
                 WORK_STATION_CD = PARAM.workStationCd )
            WHEN MATCHED THEN 
                 UPDATE SET WORK_CENTER_CD = PARAM.workCenterCd
                          , WORK_STATION_NM = PARAM.workStationNm
                          , USE_YN = PARAM.useYn
                          , DESCRIPTION = PARAM.description
                          , CREATE_BY = PARAM.createBy
                          , CREATE_DATE = PARAM.createDate
                          , UPDATE_BY = PARAM.updateBy
                          , UPDATE_DATE = PARAM.updateDate
            WHEN NOT MATCHED THEN
                     INSERT ( COMPANY_CD
                            , DIVISION_CD
                            , WORK_CENTER_CD
                            , WORK_STATION_CD
                            , WORK_STATION_NM
                            , USE_YN
                            , DESCRIPTION
                            , CREATE_BY
                            , CREATE_DATE
                            , UPDATE_BY
                            , UPDATE_DATE )
                     VALUES ( PARAM.companyCd
                            , PARAM.divisionCd
                            , PARAM.workCenterCd
                            , PARAM.workStationCd
                            , PARAM.workStationNm
                            , PARAM.useYn
                            , PARAM.description
                            , PARAM.createBy
                            , PARAM.createDate
                            , PARAM.updateBy
                            , PARAM.updateDate )
  </insert>  
</mapper>
