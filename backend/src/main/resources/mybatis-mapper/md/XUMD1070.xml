<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMD1070">
  <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	  SELECT MCD.COMPANY_CD
		   , MCD.COMPANY_NM
		   , MCD.DIVISION_CD
		   , MCD.DIVISION_NM
		   , MO.OPERATION_ID 
		   , MO.OPERATION_NM 
	       , MO.INSPECTION_YN  
           , MO.USE_YN
		   , MO.DESCRIPTION
		   , MO.CREATE_BY
		   ,(SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MO.COMPANY_CD, MO.DIVISION_CD, MO.CREATE_BY) FROM DUAL ) AS CREATE_BY_NM
		   , TO_CHAR(MO.CREATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS CREATE_DATE
		   , MO.UPDATE_BY
		   ,(SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MO.COMPANY_CD, MO.DIVISION_CD, MO.UPDATE_BY) FROM DUAL ) AS UPDATE_BY_NM
		   , TO_CHAR(MO.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
           , ROWIDTOCHAR(MO.ROWID) AS GRID_ID
	  FROM   MOM_COM_DIV_V MCD
		   , MOM_OPERATION MO
	  WHERE  MCD.COMPANY_CD  = MO.COMPANY_CD
	  AND    MCD.DIVISION_CD = MO.DIVISION_CD   
	  AND    MCD.COMPANY_CD  = #{companyCd,  jdbcType=VARCHAR}
	  AND    MCD.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}  		
	<if test="operationId != null and operationId != ''">
    AND (MO.OPERATION_ID  LIKE '%' || TRIM(UPPER(#{operationId, jdbcType=VARCHAR})) || '%' )
	</if>
	<if test="operationNm != null and operationNm != ''">
    AND (MO.OPERATION_NM  LIKE '%' || TRIM(UPPER(#{operationNm, jdbcType=VARCHAR})) || '%' )
	</if>
	<if test="inspectionYn != null and inspectionYn != ''">
    AND MO.INSPECTION_YN = #{inspectionYn, jdbcType=VARCHAR}
	</if>
    <if test="useYn != null and useYn != ''">
    AND MO.USE_YN = #{useYn, jdbcType=VARCHAR}
	</if>
    ORDER BY  MCD.COMPANY_NM, MCD.DIVISION_NM,MO.OPERATION_NM					
  </select>
  <insert id="create_createBtn1" parameterType="java.util.List">
         INSERT INTO MOM_OPERATION (
                     COMPANY_CD
                  ,  DIVISION_CD
                  ,  OPERATION_ID
                  ,  OPERATION_NM
                  ,  INSPECTION_YN
                  ,  USE_YN
                  ,  DESCRIPTION
                  ,  CREATE_BY
                  ,  CREATE_DATE
                  ,  UPDATE_BY
                  ,  UPDATE_DATE )
         VALUES <foreach item="item" collection="list" index="i" separator=" " open="">
                  (  #{item.companyCd, jdbcType=VARCHAR}
                  ,  #{item.divisionCd, jdbcType=VARCHAR}
                  ,  #{item.operationId, jdbcType=VARCHAR}
                  ,  #{item.operationNm, jdbcType=VARCHAR}
                  ,  #{item.inspectionYn, jdbcType=VARCHAR}
                  ,  #{item.useYn, jdbcType=VARCHAR}
                  ,  #{item.description, jdbcType=VARCHAR}
                  ,  #{item.userId, jdbcType=VARCHAR}
                  ,  MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                  ,  #{item.userId, jdbcType=VARCHAR}
                  ,  MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                  )
                </foreach>
  </insert>
  <update id="modify_editBtn1" parameterType="java.util.List">
    <foreach collection="list" item="item" separator=";" open="DECLARE BEGIN" close=";END;">
      UPDATE MOM_OPERATION
      SET    COMPANY_CD     = #{item.companyCd, jdbcType=VARCHAR}
           , DIVISION_CD    = #{item.divisionCd, jdbcType=VARCHAR}
           , OPERATION_ID   = #{item.operationId, jdbcType=VARCHAR}
           , OPERATION_NM   = #{item.operationNm, jdbcType=VARCHAR}
           , INSPECTION_YN  = #{item.inspectionYn, jdbcType=VARCHAR}
           , USE_YN         = #{item.useYn, jdbcType=VARCHAR}
           , DESCRIPTION    = #{item.description, jdbcType=VARCHAR}
           , UPDATE_BY      = #{item.userId, jdbcType=VARCHAR}
           , UPDATE_DATE    = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
      WHERE  1=1
      AND    COMPANY_CD     = TRIM(#{item.companyCd,     jdbcType=VARCHAR})
      AND    DIVISION_CD    = TRIM(#{item.divisionCd,    jdbcType=VARCHAR}) 
      AND    OPERATION_ID   = TRIM(#{item.operationId,   jdbcType=VARCHAR})       
    </foreach>
  </update>
  <delete id="remove_delBtn1" parameterType="java.util.List"> 
	  DELETE FROM MOM_OPERATION
      <where> 
       <foreach collection="list" item="item" open="" close="" separator="OR"> 
         (      COMPANY_CD   = TRIM(#{item.companyCd,     jdbcType=VARCHAR})
	        AND DIVISION_CD  = TRIM(#{item.divisionCd,    jdbcType=VARCHAR}) 
	        AND OPERATION_ID = TRIM(#{item.operationId,   jdbcType=VARCHAR})               
         )
       </foreach>
      </where>
  </delete> 
   <insert id="upsert_excelUpBtn1" parameterType="java.util.HashMap" flushCache="true">
      MERGE INTO MOM_OPERATION 
            USING( 
                     SELECT #{companyCd, jdbcType=VARCHAR} as companyCd,
                            #{divisionCd, jdbcType=VARCHAR} as divisionCd,
                            #{operationId, jdbcType=VARCHAR} as operationId,
                            #{operationNm, jdbcType=VARCHAR} as operationNm,
                            #{inspectionYn, jdbcType=VARCHAR} as inspectionYn,
                            #{useYn, jdbcType=VARCHAR} as useYn,
                            #{description, jdbcType=VARCHAR} as description,
                            #{userId, jdbcType=VARCHAR} as createBy,
                            MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR}) as createDate,
                            #{userId, jdbcType=VARCHAR} as updateBy,
                            MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR}) as updateDate
                     FROM DUAL
                 ) PARAM
            ON ( COMPANY_CD = PARAM.companyCd AND
                 DIVISION_CD = PARAM.divisionCd AND
                 OPERATION_ID = PARAM.operationId )
            WHEN MATCHED THEN 
                 UPDATE SET OPERATION_NM = PARAM.operationNm
                          , INSPECTION_YN = PARAM.inspectionYn
                          , USE_YN = PARAM.useYn
                          , DESCRIPTION = PARAM.description
                          , CREATE_BY = PARAM.createBy
                          , CREATE_DATE = PARAM.createDate
                          , UPDATE_BY = PARAM.updateBy
                          , UPDATE_DATE = PARAM.updateDate
            WHEN NOT MATCHED THEN
                     INSERT ( COMPANY_CD
                            , DIVISION_CD
                            , OPERATION_ID
                            , OPERATION_NM
                            , INSPECTION_YN
                            , USE_YN
                            , DESCRIPTION
                            , CREATE_BY
                            , CREATE_DATE
                            , UPDATE_BY
                            , UPDATE_DATE )
                     VALUES ( PARAM.companyCd
                            , PARAM.divisionCd
                            , PARAM.operationId
                            , PARAM.operationNm
                            , PARAM.inspectionYn
                            , PARAM.useYn
                            , PARAM.description
                            , PARAM.createBy
                            , PARAM.createDate
                            , PARAM.updateBy
                            , PARAM.updateDate )
  </insert>      
  </mapper>