<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.XUMD1010">
<!--     <parameterMap id="paramMap" type="hashMap">
    	<parameter property="cd"         mode="IN"  jdbcType="VARCHAR" javaType = "java.lang.String"/>
    	
    	<parameter property="p_err_code" mode="OUT" jdbcType="VARCHAR" javaType = "string"/>   
    	<parameter property="p_err_code" mode="OUT" jdbcType="VARCHAR" javaType = "string"/>   fetchSize="1"resultType="com.mom.dto.LowerHashMap"
    </parameterMap> -->
    	<select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.dto.LowerHashMap" fetchSize="1000">
            SELECT MCD.COMPANY_CD
			     , MCD.COMPANY_NM
			     , MCD.DIVISION_CD
			     , MCD.DIVISION_NM
			     , MP.PLANT_CD
			     , MP.PLANT_NM
			     , MP.USE_YN
			     , MP.DESCRIPTION
			FROM   MOM_COM_DIV_V MCD
			     , MOM_PLANT MP
			WHERE  MCD.COMPANY_CD = MP.COMPANY_CD
			AND    MCD.DIVISION_CD  = MP.DIVISION_CD
		    <if test="plantCd != null and plantCd != ''">
		    AND (MP.PLANT_CD LIKE '%' || TRIM(UPPER(#{plantCd, jdbcType=VARCHAR})) || '%' )
		    </if>
		    <if test="plantNm != null and plantNm != ''">
		    AND (MP.PLANT_NM LIKE '%' || TRIM(UPPER(#{plantNm, jdbcType=VARCHAR})) || '%' )
		    </if>
		    <if test="useYn != null and useYn != ''">
		    AND MP.USE_YN = #{useYn, jdbcType=VARCHAR}
		    </if>
			ORDER BY  MP.PLANT_NM							
	    </select>
    <insert id="create_createBtn1" parameterType="java.util.List">  
        INSERT INTO MOM_PLANT(
					              COMPANY_CD
						        , DIVISION_CD
							    , PLANT_CD
							    , PLANT_NM
								, USE_YN
								, DESCRIPTION
								, CREATE_BY
								, CREATE_DATE
								, UPDATE_BY
								, UPDATE_DATE
					         )     
        VALUES
                <foreach item="item" collection="list" index="i" separator=" " open="">
				          (    TRIM(#{item.companyCd, jdbcType=VARCHAR})
				             , TRIM(#{item.divisionCd, jdbcType=VARCHAR})
				             , TRIM(#{item.plantCd, jdbcType=VARCHAR})
				             , #{item.plantNm, jdbcType=VARCHAR}
				             , TRIM(#{item.useYn, jdbcType=VARCHAR})
				             , #{item.description, jdbcType=VARCHAR}    
				             , TRIM(#{item.userId, jdbcType=VARCHAR})
				             , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.divisionCd, jdbcType=VARCHAR}, #{item.companyCd, jdbcType=VARCHAR})
				             , TRIM(#{item.userId, jdbcType=VARCHAR})
				             , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.divisionCd, jdbcType=VARCHAR}, #{item.companyCd, jdbcType=VARCHAR})  
				          )		             
	            </foreach>			               
   </insert>   
   <update id="modify_editBtn1" parameterType="java.util.List">     
      <foreach collection="list" item="item" separator=";" open="DECLARE BEGIN" close=";END;">
        UPDATE MOM_PLANT 
        SET    PLANT_NM       = #{item.plantNm,     jdbcType=VARCHAR}
		     , USE_YN 		  = #{item.useYn,       jdbcType=VARCHAR}
 		     , DESCRIPTION    = #{item.description, jdbcType=VARCHAR}
		     , UPDATE_BY      = #{item.userId,      jdbcType=VARCHAR}
		     , UPDATE_DATE    = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.divisionCd, jdbcType=VARCHAR}, #{item.companyCd, jdbcType=VARCHAR})
         <where>
               COMPANY_CD     = #{item.companyCd,  jdbcType=VARCHAR} 
         AND   DIVISION_CD    = #{item.divisionCd, jdbcType=VARCHAR} 
         AND   PLANT_CD       = #{item.plantCd,    jdbcType=VARCHAR} 
         </where>
      </foreach>
   </update> 
   <delete id="remove_delBtn1" parameterType="java.util.List"> 
	   DELETE FROM     MOM_PLANT
       <where> 
        <foreach collection="list" item="item" open="" close="" separator="OR"> 
          (   
              COMPANY_CD     = #{item.companyCd,  jdbcType=VARCHAR} 
         AND  DIVISION_CD    = #{item.divisionCd, jdbcType=VARCHAR} 
         AND  PLANT_CD       = #{item.plantCd,    jdbcType=VARCHAR} 
          )
        </foreach>
       </where>
   </delete>
  <insert id="upsert_excelUpBtn1" parameterType="java.util.HashMap" flushCache="true">
	  MERGE INTO MOM_PLANT MP
	        USING ( 
	                   SELECT     #{companyCd, jdbcType=VARCHAR}                              									           as companyCd,                                              					  
	                              #{divisionCd, jdbcType=VARCHAR}															               as divisionCd,                                 						       
	                              #{plantCd, jdbcType=VARCHAR}                                                                            as plantCd,
					              #{plantNm, jdbcType=VARCHAR}           															       as plantNm,
					              #{useYn, jdbcType=VARCHAR}         															           as useYn,
					              #{description, jdbcType=VARCHAR}    															           as description,
					              #{userId, jdbcType=VARCHAR}         														           	   as createBy,
					              MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})  as createDate,
					              TRIM(#{userId, jdbcType=VARCHAR})         														 as updateBy,
					              MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})  as updateDate
	                   FROM DUAL
	            
	              ) PARAM 
	        ON ( COMPANY_CD = PARAM.companyCd AND 
	             DIVISION_CD = PARAM.divisionCd AND
	             PLANT_CD = PARAM.plantCd )
	        WHEN MATCHED THEN
	             UPDATE SET PLANT_NM       = PARAM.plantNm
				          , USE_YN 	       = PARAM.useYn
		 		          , DESCRIPTION    = PARAM.description
				          , UPDATE_BY      = PARAM.updateBy
				          , UPDATE_DATE    = PARAM.updateDate
			    	       
	        WHEN NOT MATCHED THEN
		         INSERT ( COMPANY_CD
						, DIVISION_CD
						, PLANT_CD
						, PLANT_NM
						, USE_YN
						, DESCRIPTION
						, CREATE_BY
						, CREATE_DATE
						, UPDATE_BY
						, UPDATE_DATE )   
	             VALUES ( PARAM.companyCd
						, PARAM.divisionCd
						, PARAM.plantCd
				        , PARAM.plantNm
				        , PARAM.useYn
				        , PARAM.description
				      	, PARAM.createBy
				   		, PARAM.createDate
						, PARAM.updateBy
						, PARAM.updateDate )	 
  </insert>
</mapper>
