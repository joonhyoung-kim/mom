<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMD1010">
	<resultMap id="get_findBtn1_result" type="com.mom.backend.dto.LowerHashMap">
	<result property="COMPANY_CD"       column="COMPANY_CD"          jdbcType="NVARCHAR" javaType="String"/>
	<result property="DIVISION_CD"      column="DIVISION_CD"         jdbcType="NVARCHAR" javaType="String"/>
	<result property="FILE_ID"          column="FILE_ID"             jdbcType="NVARCHAR" javaType="String"/>
	<result property="FILE_TYPE"        column="FILE_TYPE"           jdbcType="NVARCHAR" javaType="String"/>
	<result property="MENU_ID"          column="MENU_ID"             jdbcType="NVARCHAR" javaType="String"/>
	<result property="GRID_ID"          column="GRID_ID"             jdbcType="NVARCHAR" javaType="String"/>
	<result property="KEY_ID"           column="KEY_ID"              jdbcType="NVARCHAR" javaType="String"/>
	<result property="FILE_NM"          column="FILE_NM"             jdbcType="NVARCHAR" javaType="String"/>
	<result property="FILE_UUID"        column="FILE_UUID"           jdbcType="NVARCHAR" javaType="String"/>
	<result property="PARAMETER"        column="PARAMETER"           jdbcType="NVARCHAR" javaType="String"/>
	<result property="FILE_PATH"        column="FILE_PATH"           jdbcType="NVARCHAR" javaType="String"/>
	<result property="FILE_BLOB"        column="FILE_BLOB"           jdbcType="BLOB"     javaType="byte[]"/>
	<result property="DESCRIPTION"      column="DESCRIPTION"         jdbcType="NVARCHAR" javaType="String"/>
	<result property="CREATE_BY"        column="CREATE_BY"           jdbcType="NVARCHAR" javaType="String"/>
	<result property="CREATE_DATE"      column="CREATE_DATE"         jdbcType="NVARCHAR" javaType="String"/>
	<result property="UPDATE_BY"        column="UPDATE_BY"           jdbcType="NVARCHAR" javaType="String"/>
	<result property="UPDATE_DATE"      column="UPDATE_DATE"         jdbcType="NVARCHAR" javaType="String"/>
	</resultMap>
   <select id="get_fileUp1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" resultMap="get_findBtn1_result">
      SELECT MF.COMPANY_CD
           , MF.DIVISION_CD
           , MF.FILE_ID
           , MF.FILE_ID AS KEY_ID
           , MF.FILE_TYPE
           , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MF.COMPANY_CD, MF.DIVISION_CD, 'SM0025', MF.FILE_TYPE, 'KR') FROM DUAL)  AS FILE_TYPE_NM
           , MF.FILE_NM
           , MF.FILE_UUID
           , MF.FILE_PATH
           , MF.FILE_BLOB
		   , MF.PARAMETER
		   , MF.DESCRIPTION
		   , MF.CREATE_BY
		   , TO_CHAR(MF.CREATE_DATE,'YYYY-MM-DD') AS CREATE_DATE
		   , MF.UPDATE_BY
		   , TO_CHAR(MF.UPDATE_DATE,'YYYY-MM-DD') AS UPDATE_DATE
	  FROM   MOM_FILE MF
	  WHERE  MF.COMPANY_CD   = #{companyCd, jdbcType=VARCHAR}
	  AND    MF.DIVISION_CD  = #{divisionCd, jdbcType=VARCHAR}	  
	  AND    MF.MENU_ID      = #{menuId, jdbcType=VARCHAR}	
	  AND    MF.GRID_ID      = #{gridId, jdbcType=VARCHAR}	
	  AND    UPPER(MF.FILE_ID ) LIKE '%' || UPPER(#{fileKeyId, jdbcType=VARCHAR}) || '%'	  
	</select>
    <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	    SELECT MCD.COMPANY_CD
	         , MCD.COMPANY_NM
	         , MCD.DIVISION_CD
			 , MCD.DIVISION_NM
			 , MP.PLANT_CD
			 , MP.PLANT_NM
			 , MP.USE_YN
			 , MP.DESCRIPTION
			 , TO_CHAR(ROWNUM) AS KEY_ID
			 , ROWIDTOCHAR(MP.ROWID) AS GRID_ID
			 , MP.PLANT_CD AS FILE_KEY_ID
	    FROM   MOM_COM_DIV_V MCD
	         , MOM_PLANT MP
		WHERE  MCD.COMPANY_CD  = MP.COMPANY_CD
		AND    MCD.DIVISION_CD = MP.DIVISION_CD
		AND    MCD.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
	    AND    MCD.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}	  
		<if test="plantCd != null and plantCd != ''">
		AND (MP.PLANT_CD LIKE '%' || TRIM(UPPER(#{plantCd, jdbcType=VARCHAR})) || '%' )
		</if>
		<if test="plantNm != null and plantNm != ''">
		AND (MP.PLANT_NM LIKE '%' || TRIM(UPPER(#{plantNm, jdbcType=VARCHAR})) || '%' )
		</if>
		<if test="useYn != null and useYn != ''">
		AND MP.USE_YN = #{useYn, jdbcType=VARCHAR}
		</if>
		ORDER BY  MP.PLANT_NM							
	</select>

	<insert id="create_fileUp1" parameterType="java.util.List">
	  <selectKey keyProperty ="seq" resultType="String" order="BEFORE">
       SELECT '_FM' || LPAD(FILE_UPLOAD_SEQ.NEXTVAL,5,'0') AS SEQ
       FROM   DUAL  
      </selectKey>
      <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_FILE (
                  COMPANY_CD
                , DIVISION_CD
                , FILE_ID
                , FILE_TYPE
                , FILE_PATH
                , FILE_NM
                , FILE_UUID
                , MENU_ID
                , GRID_ID 
                , PARAMETER
                , DESCRIPTION
                , CREATE_BY
                , CREATE_DATE
                , UPDATE_BY
                , UPDATE_DATE )
      VALUES 
              (   #{item.companyCd, jdbcType=VARCHAR}
                , #{item.divisionCd, jdbcType=VARCHAR}
                , #{item.fileKeyId, jdbcType=VARCHAR} || #{seq, jdbcType=VARCHAR}
                , #{item.fileType, jdbcType=VARCHAR}
                , #{item.filePath, jdbcType=VARCHAR}
                , #{item.fileNm, jdbcType=VARCHAR}
                , #{item.fileUuid, jdbcType=VARCHAR}
                , #{item.menuId, jdbcType=VARCHAR}
                , #{item.gridId, jdbcType=VARCHAR}
                , #{item.parameter, jdbcType=VARCHAR}
                , #{item.description, jdbcType=VARCHAR}
                , #{item.userId, jdbcType=VARCHAR}
                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                , #{item.userId, jdbcType=VARCHAR}
                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
              )
   </foreach>
  </insert>
	<delete id="remove_fileUp1" parameterType="java.util.List">
      DELETE FROM MOM_FILE
      <where>
       <foreach collection="list" item="item" open="" close="" separator="OR">
        (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
           AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
           AND  FILE_ID     = #{item.fileId, jdbcType=VARCHAR}
        )
       </foreach>
      </where>
    </delete>
    <insert id="create_createBtn1" parameterType="java.util.List">  
        INSERT INTO MOM_PLANT( COMPANY_CD
						     , DIVISION_CD
							 , PLANT_CD
							 , PLANT_NM
							 , USE_YN
							 , DESCRIPTION
							 , CREATE_BY
							 , CREATE_DATE
							 , UPDATE_BY
							 , UPDATE_DATE
					         )     
        VALUES
            <foreach item="item" collection="list" index="i" separator=" " open="">
			( TRIM(#{item.companyCd, jdbcType=VARCHAR})
			, TRIM(#{item.divisionCd, jdbcType=VARCHAR})
			, TRIM(#{item.plantCd, jdbcType=VARCHAR})
			, #{item.plantNm, jdbcType=VARCHAR}
			, TRIM(#{item.useYn, jdbcType=VARCHAR})
			, #{item.description, jdbcType=VARCHAR}    
			, TRIM(#{item.userId, jdbcType=VARCHAR})
			, MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.divisionCd, jdbcType=VARCHAR}, #{item.companyCd, jdbcType=VARCHAR})
			, TRIM(#{item.userId, jdbcType=VARCHAR})
			, MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.divisionCd, jdbcType=VARCHAR}, #{item.companyCd, jdbcType=VARCHAR})  
			)		             
	        </foreach>			               
    </insert>   

    <update id="modify_editBtn1" parameterType="java.util.List">     
        <foreach collection="list" item="item" separator=";" open="DECLARE BEGIN" close=";END;">
        UPDATE MOM_PLANT 
        SET    PLANT_NM       = #{item.plantNm,     jdbcType=VARCHAR}
		     , USE_YN 		  = #{item.useYn,       jdbcType=VARCHAR}
 		     , DESCRIPTION    = #{item.description, jdbcType=VARCHAR}
		     , UPDATE_BY      = #{item.userId,      jdbcType=VARCHAR}
		     , UPDATE_DATE    = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.divisionCd, jdbcType=VARCHAR}, #{item.companyCd, jdbcType=VARCHAR})
        <where>
               COMPANY_CD     = #{item.companyCd,  jdbcType=VARCHAR} 
        AND    DIVISION_CD    = #{item.divisionCd, jdbcType=VARCHAR} 
        AND    PLANT_CD       = #{item.plantCd,    jdbcType=VARCHAR} 
        </where>
        </foreach>
    </update> 
    <delete id="remove_delBtn1" parameterType="java.util.List"> 
	    DELETE FROM  MOM_PLANT
        <where> 
        <foreach collection="list" item="item" open="" close="" separator="OR"> 
        (   
              COMPANY_CD     = #{item.companyCd,  jdbcType=VARCHAR} 
         AND  DIVISION_CD    = #{item.divisionCd, jdbcType=VARCHAR} 
         AND  PLANT_CD       = #{item.plantCd,    jdbcType=VARCHAR} 
        )
        </foreach>
        </where>
    </delete>
    <insert id="upsert_excelUpBtn1" parameterType="java.util.HashMap" flushCache="true">
	    MERGE 
	    INTO  MOM_PLANT MP
	    USING ( SELECT #{companyCd, jdbcType=VARCHAR}                              									           as companyCd
	                 , #{divisionCd, jdbcType=VARCHAR}															               as divisionCd
	                 , #{plantCd, jdbcType=VARCHAR}                                                                            as plantCd
	                 , #{plantNm, jdbcType=VARCHAR}           															       as plantNm
	                 , #{useYn, jdbcType=VARCHAR}         															           as useYn
	                 , #{description, jdbcType=VARCHAR}    															           as description
	                 , #{userId, jdbcType=VARCHAR}         														           	   as createBy
	                 , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})  as createDate
	                 , TRIM(#{userId, jdbcType=VARCHAR})         														 as updateBy
	                 , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{divisionCd, jdbcType=VARCHAR}, #{companyCd, jdbcType=VARCHAR})  as updateDate
	            FROM DUAL
	          ) PARAM 
	    ON    ( COMPANY_CD  = PARAM.companyCd  AND 
	            DIVISION_CD = PARAM.divisionCd AND
	            PLANT_CD    = PARAM.plantCd )
	    WHEN MATCHED THEN
	        UPDATE SET PLANT_NM   = PARAM.plantNm
			     , USE_YN 	      = PARAM.useYn
		 	     , DESCRIPTION    = PARAM.description
			     , UPDATE_BY      = PARAM.updateBy
			     , UPDATE_DATE    = PARAM.updateDate
	    WHEN NOT MATCHED THEN
		    INSERT ( COMPANY_CD
				   , DIVISION_CD
				   , PLANT_CD
				   , PLANT_NM
				   , USE_YN
				   , DESCRIPTION
				   , CREATE_BY
				   , CREATE_DATE
				   , UPDATE_BY
				   , UPDATE_DATE )   
	        VALUES ( PARAM.companyCd
				   , PARAM.divisionCd
				   , PARAM.plantCd
				   , PARAM.plantNm
				   , PARAM.useYn
				   , PARAM.description
				   , PARAM.createBy
				   , PARAM.createDate
				   , PARAM.updateBy
				   , PARAM.updateDate )	 
    </insert>
</mapper>
