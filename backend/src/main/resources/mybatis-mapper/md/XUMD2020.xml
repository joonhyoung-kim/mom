<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMD2020">
    <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
  	    SELECT LPAD(LEVEL, DECODE(LEVEL,1,1,(LEVEL*2)-1),'.') AS BOM_LEVEL
		     , LEVEL   
		     , MB.PARENT_ITEM_ID
		     , MB.PARENT_ITEM_ID AS PARENT_ITEM_ID2
		     , MB.CHILD_ITEM_ID     
		     , MB.PARENT_ITEM_ID || '_' || MB.CHILD_ITEM_ID  AS KEY_ID
		     , MB.REQ_QTY 
		     , MB.PHANTOM_FLAG  
		     , MB.MRP_FLAG
		     , MB.ISSUE_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD,MI.DIVISION_CD, 'MD0006', MB.ISSUE_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS ISSUE_TYPE_NM  
		     , TO_CHAR(MB.START_DATE,'YYYY-MM-DD') AS START_DATE
		     , TO_CHAR(MB.END_DATE,'YYYY-MM-DD') AS END_DATE          
		     , MB.SORT_NO  
		     , MB.UPDATE_BY  
		     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MB.COMPANY_CD, MB.DIVISION_CD, MB.UPDATE_BY) FROM DUAL ) AS UPDATEBYNM
		     , TO_CHAR(MB.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
		     , MI.ITEM_NM AS CHILD_ITEM_NM    
		     , MI.ITEM_SPEC
		     , MI.ITEM_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD,MI.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS ITEM_TYPE_NM     
		     , MB.UNIT
		     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME( MB.COMPANY_CD,MB.DIVISION_CD, MB.UNIT) FROM DUAL) AS UNIT_NM 
		     , MI.IN_LOCATION_CD
		     , MI.LOT_MANAGEMENT_YN
		     , MI.PRICE_SYNC_YN
			 , MI.PO_OVER_RECEIPT_RATE
		     , (SELECT MOM_COMMON_PKG.FN_GET_LOCATION_NAME(MI.COMPANY_CD,MI.DIVISION_CD,MI.IN_LOCATION_CD) FROM DUAL) AS IN_LOCATION_NM
		     , (SELECT MOM_COMMON_PKG.FN_GET_PRIMARY_WORK_CENTER_CD(MB.COMPANY_CD, MB.DIVISION_CD, MB.CHILD_ITEM_ID) FROM DUAL) AS WORK_CENTER_CD
             , (SELECT MOM_COMMON_PKG.FN_GET_WORK_CENTER_NAME( MB.COMPANY_CD
                                                             , MB.DIVISION_CD
                                                             , (SELECT MOM_COMMON_PKG.FN_GET_PRIMARY_WORK_CENTER_CD(MB.COMPANY_CD, MB.DIVISION_CD, MB.CHILD_ITEM_ID) FROM DUAL)) 
               FROM   DUAL)  AS WORK_CENTER_NM
		     , MCD.COMPANY_CD
		     , MCD.COMPANY_NM
		     , MCD.DIVISION_CD
		     , MCD.DIVISION_NM
		     , MB.DESCRIPTION
		     , CONNECT_BY_ROOT(MB.CHILD_ITEM_ID)             AS BOM_ROOT
		     , SYS_CONNECT_BY_PATH(MB.CHILD_ITEM_ID, ' -> ') AS BOM_PATH
		     , CONNECT_BY_ISLEAF                             AS BOM_LEAF
		     , MB.USE_YN 
        FROM   MOM_COM_DIV_V MCD
	         , MOM_BOM MB
		     , MOM_ITEM MI
		WHERE  MCD.COMPANY_CD   = MB.COMPANY_CD
		AND    MCD.DIVISION_CD  = MB.DIVISION_CD
		AND    MB.COMPANY_CD    = MI.COMPANY_CD
		AND    MB.DIVISION_CD   = MI.DIVISION_CD
		AND    MB.CHILD_ITEM_ID = MI.ITEM_ID 
	    AND    MB.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
	    AND    MB.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}  	
		AND    MB.USE_YN      = #{useYn, jdbcType=VARCHAR}    
		<choose>
	 	    <when test='deploymentType.equals("E")'>
	  	  	START WITH MB.PARENT_ITEM_ID = #{childItemId, jdbcType=VARCHAR}   
	  	  	<if test="basicDate != null and basicDate != ''">
		    AND    TO_DATE(#{basicDate, jdbcType=VARCHAR} , 'YYYY-MM-DD') BETWEEN MB.START_DATE AND MB.END_DATE
		    </if>
		    CONNECT BY PRIOR MB.CHILD_ITEM_ID = MB.PARENT_ITEM_ID  
		    <if test="basicDate != null and basicDate != ''">
		    AND    TO_DATE(#{basicDate, jdbcType=VARCHAR} , 'YYYY-MM-DD') BETWEEN MB.START_DATE AND MB.END_DATE
		    </if>
	  	    </when>  
	 	    <when test='deploymentType.equals("I")'>
	  	  	START WITH MB.CHILD_ITEM_ID  = #{childItemId, jdbcType=VARCHAR}  
	  	  	<if test="basicDate != null and basicDate != ''">
		    AND    TO_DATE(#{basicDate, jdbcType=VARCHAR} , 'YYYY-MM-DD') BETWEEN MB.START_DATE AND MB.END_DATE
		    </if>
		    CONNECT BY PRIOR MB.PARENT_ITEM_ID = MB.CHILD_ITEM_ID 
		    <if test="basicDate != null and basicDate != ''">
		    AND    TO_DATE(#{basicDate, jdbcType=VARCHAR} , 'YYYY-MM-DD') BETWEEN MB.START_DATE AND MB.END_DATE
		    </if>   
	  	    </when>    
	  	    <otherwise>
	  	    START WITH MB.PARENT_ITEM_ID = #{childItemId, jdbcType=VARCHAR}   
	  	    <if test="basicDate != null and basicDate != ''">
		    AND    TO_DATE(#{basicDate, jdbcType=VARCHAR} , 'YYYY-MM-DD') BETWEEN MB.START_DATE AND MB.END_DATE
		    </if>
		    CONNECT BY PRIOR MB.CHILD_ITEM_ID = MB.PARENT_ITEM_ID
		    <if test="basicDate != null and basicDate != ''">
		    AND    TO_DATE(#{basicDate, jdbcType=VARCHAR} , 'YYYY-MM-DD') BETWEEN MB.START_DATE AND MB.END_DATE
		    </if>  
	  	    </otherwise>
	    </choose>						
    </select>
    <insert id="create_createBtn1" parameterType="java.util.List">  
        INSERT INTO MOM_BOM( COMPANY_CD
						   , DIVISION_CD
						   , PARENT_ITEM_ID
						   , CHILD_ITEM_ID
						   , UNIT
						   , REQ_QTY
						   , START_DATE
						   , END_DATE
						   , PHANTOM_FLAG
						   , MRP_FLAG
						   , ISSUE_TYPE
						   , SORT_NO
						   , USE_YN
						   , DESCRIPTION
						   , CREATE_BY
						   , CREATE_DATE
						   , UPDATE_BY
						   , UPDATE_DATE )     
        VALUES 
            <foreach item="item" collection="list" index="i" separator=" " open="">
		    ( #{item.companyCd,          jdbcType=VARCHAR}
            , #{item.divisionCd,         jdbcType=VARCHAR}
            , #{item.parentItemId,       jdbcType=VARCHAR}
            , #{item.childItemId,        jdbcType=VARCHAR}
            , #{item.unit,               jdbcType=VARCHAR}
            , #{item.reqQty,             jdbcType=NUMERIC}
            , TO_DATE(#{item.startDate,  jdbcType=VARCHAR},'YYYY-MM-DD')
            , TO_DATE(#{item.endDate,    jdbcType=VARCHAR},'YYYY-MM-DD')
            , #{item.phantomFlag,        jdbcType=VARCHAR}
            , #{item.mrpFlag,            jdbcType=VARCHAR}
            , #{item.issueType,          jdbcType=VARCHAR}
            , #{item.sortNo,             jdbcType=NUMERIC}
            , #{item.useYn,              jdbcType=VARCHAR}
            , #{item.description,        jdbcType=VARCHAR}    
            , #{item.userId,        jdbcType=VARCHAR}
            , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
            , #{item.userId,   jdbcType=VARCHAR}
            , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR}) 
            )		             
           </foreach>			               
    </insert>   
    <update id="modify_editBtn1" parameterType="java.util.List">     
        <foreach collection="list" item="item" separator=";" open="DECLARE BEGIN" close=";END;">
        UPDATE MOM_BOM
        SET    UNIT              = #{item.unit,             jdbcType=VARCHAR}
             , REQ_QTY           = #{item.reqQty,             jdbcType=VARCHAR}
			 , START_DATE        = #{item.startDate,          jdbcType=VARCHAR}
			 , END_DATE          = #{item.endDate,            jdbcType=VARCHAR}
			 , SORT_NO           = #{item.sortNo,             jdbcType=VARCHAR}
			 , MRP_FLAG          = #{item.mrpFlag,            jdbcType=VARCHAR}
			 , ISSUE_TYPE        = #{item.issueType,          jdbcType=VARCHAR}
             , PHANTOM_FLAG      = #{item.phantomFlag,        jdbcType=VARCHAR}	         
             , USE_YN            = #{item.useYn,   		      jdbcType=VARCHAR}  
             , DESCRIPTION       = #{item.description,        jdbcType=VARCHAR}    
	         , UPDATE_BY         = #{item.userId,             jdbcType=VARCHAR}
	         , UPDATE_DATE       = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR}, #{item.divisionCd, jdbcType=VARCHAR})
        <where>
               COMPANY_CD        = TRIM(#{item.companyCd,     jdbcType=VARCHAR})
         AND   DIVISION_CD       = TRIM(#{item.divisionCd,    jdbcType=VARCHAR}) 
         AND   PARENT_ITEM_ID    = TRIM(#{item.parentItemId,  jdbcType=VARCHAR})
         AND   CHILD_ITEM_ID     = TRIM(#{item.childItemId,   jdbcType=VARCHAR}) 
         </where>
      </foreach>
   </update> 
   <delete id="remove_delBtn1" parameterType="java.util.List"> 
	DELETE
	FROM    MOM_BOM
        <where> 
            <foreach collection="list" item="item" open="" close="" separator="OR"> 
            (   
		          COMPANY_CD        = TRIM(#{item.companyCd,     jdbcType=VARCHAR})
	        AND   DIVISION_CD       = TRIM(#{item.divisionCd,    jdbcType=VARCHAR}) 
	        AND   PARENT_ITEM_ID    = TRIM(#{item.parentItemId,  jdbcType=VARCHAR})
	        AND   CHILD_ITEM_ID     = TRIM(#{item.childItemId,   jdbcType=VARCHAR}) 
	        )
            </foreach>
        </where>
    </delete>
    <insert id="upsert_excelUpBtn1" parameterType="java.util.HashMap" flushCache="true">
        MERGE INTO MOM_BOM 
            USING( SELECT #{companyCd, jdbcType=VARCHAR} as companyCd,
                          #{divisionCd, jdbcType=VARCHAR} as divisionCd,
                          #{parentItemId, jdbcType=VARCHAR} as parentItemId,
                          #{childItemId, jdbcType=VARCHAR} as childItemId,
                          #{unit, jdbcType=VARCHAR} as unit,
                          #{reqQty, jdbcType=NUMERIC} as reqQty,
                          TO_DATE(#{startDate, jdbcType=VARCHAR},'YYYY-MM-DD HH24:MI:SS') as startDate,
                          TO_DATE(#{endDate, jdbcType=VARCHAR},'YYYY-MM-DD HH24:MI:SS') as endDate,
                          NVL(#{phantomFlag, jdbcType=VARCHAR},'N') as phantomFlag,
                          NVL(#{mrpFlag, jdbcType=VARCHAR},'Y') as mrpFlag,
                          NVL(#{issueType, jdbcType=VARCHAR},'A') as issueType,
                          #{sortNo, jdbcType=NUMERIC} as sortNo,
                          #{useYn, jdbcType=VARCHAR} as useYn,
                          #{description, jdbcType=VARCHAR} as description,
                          #{userId, jdbcType=VARCHAR} as createBy,
                          MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{companyCd, jdbcType=VARCHAR},#{divisionCd, jdbcType=VARCHAR}) as createDate,
                          #{userId, jdbcType=VARCHAR} as updateBy,
                          MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{companyCd, jdbcType=VARCHAR},#{divisionCd, jdbcType=VARCHAR}) as updateDate
                   FROM DUAL
                 ) PARAM
            ON ( COMPANY_CD = PARAM.companyCd AND
                 DIVISION_CD = PARAM.divisionCd AND
                 PARENT_ITEM_ID = PARAM.parentItemId AND
                 CHILD_ITEM_ID = PARAM.childItemId )
            WHEN MATCHED THEN 
                 UPDATE SET UNIT    = PARAM.unit
                          , REQ_QTY = PARAM.reqQty
                          , START_DATE = PARAM.startDate
                          , END_DATE = PARAM.endDate
                          , PHANTOM_FLAG = PARAM.phantomFlag
                          , MRP_FLAG = PARAM.mrpFlag
                          , ISSUE_TYPE = PARAM.issueType
                          , SORT_NO = PARAM.sortNo
                          , USE_YN = PARAM.useYn
                          , DESCRIPTION = PARAM.description
                          , CREATE_BY = PARAM.createBy
                          , CREATE_DATE = PARAM.createDate
                          , UPDATE_BY = PARAM.updateBy
                          , UPDATE_DATE = PARAM.updateDate
            WHEN NOT MATCHED THEN
                     INSERT ( COMPANY_CD
                            , DIVISION_CD
                            , PARENT_ITEM_ID
                            , CHILD_ITEM_ID
                            , UNIT
                            , REQ_QTY
                            , START_DATE
                            , END_DATE
                            , PHANTOM_FLAG
                            , MRP_FLAG
                            , ISSUE_TYPE
                            , SORT_NO
                            , USE_YN
                            , DESCRIPTION
                            , CREATE_BY
                            , CREATE_DATE
                            , UPDATE_BY
                            , UPDATE_DATE )
                     VALUES ( PARAM.companyCd
                            , PARAM.divisionCd
                            , PARAM.parentItemId
                            , PARAM.childItemId
                            , PARAM.unit
                            , PARAM.reqQty
                            , PARAM.startDate
                            , PARAM.endDate
                            , PARAM.phantomFlag
                            , PARAM.mrpFlag
                            , PARAM.issueType
                            , PARAM.sortNo
                            , PARAM.useYn
                            , PARAM.description
                            , PARAM.createBy
                            , PARAM.createDate
                            , PARAM.updateBy
                            , PARAM.updateDate )
  </insert>
 
</mapper>
