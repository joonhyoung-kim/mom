<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMD4040">
 <select id="get_checkShift" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	 SELECT SHIFT_CD
     FROM MOM_SHIFT_SCHEDULE
	 WHERE 1=1
	 AND   COMPANY_CD  =  #{companyCd, jdbcType=VARCHAR}
	 AND   DIVISION_CD =  #{divisionCd, jdbcType=VARCHAR}
	 AND   TO_CHAR(APPLY_DATE,'YYYY-MM-DD')  = #{applyDate, jdbcType=VARCHAR}
	 AND   WORK_CENTER_CD = #{workCenterCd, jdbcType=VARCHAR}
   </select> 
   <select id="get_findBtn1" parameterType="java.util.HashMap"  resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
   SELECT *
   FROM(SELECT COUNT(*) OVER() AS TOTAL_COUNT,  
               ROWNUM AS KEY_ID,
	           ROWNUM AS ID,
               A.*    
                               
   FROM( SELECT    MCD.COMPANY_CD
			     , MCD.COMPANY_NM
			     , MCD.DIVISION_CD
			     , MCD.DIVISION_NM
			     , MSS.WORK_CENTER_CD
			     , MSS.WORK_CENTER_CD AS FROM_WORK_CENTER_CD
			     , (SELECT WORK_GROUP_CD
                    FROM MOM_WORK_CENTER
                    WHERE COMPANY_CD  = MSS.COMPANY_CD
                    AND   DIVISION_CD = MSS.DIVISION_CD 
                    AND   WORK_CENTER_CD = MSS.WORK_CENTER_CD) AS WORK_GROUP_CD
			     , ( SELECT MOM_COMMON_PKG.FN_GET_WORK_CENTER_NAME(MSS.COMPANY_CD, MSS.DIVISION_CD, MSS.WORK_CENTER_CD )  FROM DUAL) AS WORK_CENTER_NM
			     , TO_CHAR(MSS.APPLY_DATE ,'YYYY-MM-DD') AS APPLY_DATE
			     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MCD.COMPANY_CD,MCD.DIVISION_CD, 'SM0019', 
			         (SELECT MC.WEEK_DAY
			          FROM   MOM_CALENDAR MC
			          WHERE  MC.COMPANY_CD   = MSS.COMPANY_CD
			          AND    MC.DIVISION_CD  = MSS.DIVISION_CD
			          AND    MC.DATE_ID      = MSS.APPLY_DATE
			        ), #{item.langCd, jdbcType=VARCHAR}) FROM DUAL) AS WEEK_DAY_NM  
			     ,  ( SELECT MC.WEEK_DAY
			          FROM   MOM_CALENDAR MC
			          WHERE  MC.COMPANY_CD   = MSS.COMPANY_CD
			          AND    MC.DIVISION_CD  = MSS.DIVISION_CD
			          AND    MC.DATE_ID      = MSS.APPLY_DATE			
			        ) AS WEEK_DAY 
			     , MSS.SHIFT_CD
			     , MS.SHIFT_NM
			     , CASE WHEN DAY_OFF_YN = 'N' THEN MS.START_TIME
                        WHEN DAY_OFF_YN = 'Y' THEN '00:00'                       
                   ELSE '00:00'
                   END AS START_TIME
                 , CASE WHEN DAY_OFF_YN = 'N' THEN MS.END_TIME
                        WHEN DAY_OFF_YN = 'Y' THEN '00:00'
                   ELSE '00:00'
                   END AS END_TIME
			 <!--     , MS.START_TIME
			     , MS.END_TIME -->
			    ,  MSS.DAY_OFF_YN
			    , CASE WHEN DAY_OFF_YN = 'N' THEN NVL(MS.WORK_TIME,0)
                       WHEN DAY_OFF_YN = 'Y' THEN 0
                  ELSE 0
                  END AS WORK_TIME                  
                , CASE WHEN DAY_OFF_YN = 'N' THEN NVL(MT.REST_TIME,0)
                       WHEN DAY_OFF_YN = 'Y' THEN 0
                  ELSE 0
                  END AS REST_TIME                 
                , CASE WHEN DAY_OFF_YN = 'N' THEN NVL(MS.WORK_TIME,0) - NVL(MT.REST_TIME,0)
                       WHEN DAY_OFF_YN = 'Y' THEN 0
                   ELSE 0
                   END AS REAL_WORK_TIME
			     , MSS.UPDATE_BY
			     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MSS.COMPANY_CD, MSS.DIVISION_CD, MSS.UPDATE_BY) FROM DUAL ) AS UPDATE_BY_NM
			     , TO_CHAR(MSS.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
			  <!--    , MSS.WORK_CENTER_CD ||'_'||MSS.SHIFT_CD||'_'||MSS.APPLY_DATE AS KEY_ID -->
			     , MSS.DESCRIPTION
                 , ROWIDTOCHAR(MSS.ROWID) AS GRID_ID
        FROM     MOM_COM_DIV_V       MCD
		       , MOM_SHIFT_SCHEDULE  MSS
		       , MOM_SHIFT           MS
		       , MOM_WORK_GROUP MWG
		       , MOM_WORK_CENTER     MWC
		       , MOM_SHIFT_REST_TIME_V MT
		     
		WHERE  MCD.COMPANY_CD   = MSS.COMPANY_CD
		AND    MCD.DIVISION_CD  = MSS.DIVISION_CD   
		AND    MSS.COMPANY_CD   = MS.COMPANY_CD
		AND    MSS.DIVISION_CD  = MS.DIVISION_CD    
		AND    MSS.SHIFT_CD     = MS.SHIFT_CD 
		AND    MS.COMPANY_CD    = MT.COMPANY_CD(+)
		AND    MS.DIVISION_CD   = MT.DIVISION_CD(+)    
		AND    MS.SHIFT_CD      = MT.SHIFT_CD(+) 
		AND    MWC.COMPANY_CD   = MWG.COMPANY_CD
		AND    MWC.DIVISION_CD  = MWG.DIVISION_CD    
		AND    MWC.WORK_GROUP_CD   = MWG.WORK_GROUP_CD 
		AND    MSS.COMPANY_CD      = MWC.COMPANY_CD   
        AND    MSS.DIVISION_CD     = MWC.DIVISION_CD 
		AND    MSS.WORK_CENTER_CD  = MWC.WORK_CENTER_CD
		AND    MSS.COMPANY_CD      = #{companyCd, jdbcType=VARCHAR}   
        AND    MSS.DIVISION_CD     = #{divisionCd, jdbcType=VARCHAR}
		AND    MSS.APPLY_DATE BETWEEN TO_DATE(#{startDate, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{endDate, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999
	    <if test="dayOffYn != null and dayOffYn != ''">
	    AND MSS.DAY_OFF_YN = #{dayOffYn, jdbcType=VARCHAR}
	    </if>	
		<if test="workGroupCd != null and workGroupCd != ''">
	    AND MWG.WORK_GROUP_CD IN (${workGroupCd})
	    </if>	
        <if test="workCenterCd != null and workCenterCd != ''">
	    AND MSS.WORK_CENTER_CD IN (${workCenterCd})
	    </if>	
	) A 
	WHERE  1=1 
	<if test="weekDay != null and weekDay != ''">
	AND  A.WEEK_DAY IN (${weekDay})
	</if>	       
    ORDER BY KEY_ID,A.COMPANY_NM, A.DIVISION_NM, A.WORK_CENTER_CD, A.APPLY_DATE, A.SHIFT_NM )
    <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">    
    WHERE KEY_ID BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}	
    </if>           
	</select>
  <select id="proc_customBtn1-1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
          { CALL MOM_MASTER_INFO_PKG.xumd4040_wg_copy_proc(     #{p_err_code, jdbcType=VARCHAR, mode=OUT}
					                                          , #{p_err_msg,  jdbcType=VARCHAR, mode=OUT}
					                                          , #{companyCd,javaType=string,  jdbcType=VARCHAR , mode=IN}
					                                          , #{divisionCd, jdbcType=VARCHAR, mode=IN}
					                                          , TO_DATE(#{startDate,  jdbcType=VARCHAR, mode=IN},'YYYY-MM-DD')
					                                          , TO_DATE(#{endDate,    jdbcType=VARCHAR, mode=IN},'YYYY-MM-DD')
					                                          , #{fromWorkCenterCd, jdbcType=VARCHAR, mode=IN}
					                                          , #{arrayParam1,javaType=Object,jdbcType=ARRAY, jdbcTypeName=VARCHAR_ARRAY_LIST, mode=IN, typeHandler=com.mom.backend.util.ListMapTypeHandler}
					                                          , #{userId,     jdbcType=VARCHAR, mode=IN} )}    	              
  </select> 
  <select id="proc_customBtn1-2" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
          { CALL MOM_MASTER_INFO_PKG.xumd4040_wc_copy_proc(     #{p_err_code, jdbcType=VARCHAR, mode=OUT}
					                                          , #{p_err_msg,  jdbcType=VARCHAR, mode=OUT}
					                                          , #{companyCd,javaType=string,  jdbcType=VARCHAR , mode=IN}
					                                          , #{divisionCd, jdbcType=VARCHAR, mode=IN}
					                                          , TO_DATE(#{startDate,  jdbcType=VARCHAR, mode=IN},'YYYY-MM-DD')
					                                          , TO_DATE(#{endDate,    jdbcType=VARCHAR, mode=IN},'YYYY-MM-DD')
					                                          , #{fromWorkCenterCd, jdbcType=VARCHAR, mode=IN}
					                                          , #{arrayParam1,javaType=Object,jdbcType=ARRAY, jdbcTypeName=VARCHAR_ARRAY_LIST, mode=IN, typeHandler=com.mom.backend.util.ListMapTypeHandler}
					                                          , #{userId,     jdbcType=VARCHAR, mode=IN} )}    	              
  </select>  
    <select id="proc_customBtn1-3" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
          { CALL MOM_MASTER_INFO_PKG.xumd4040_wg_dayoff_proc(   #{p_err_code, jdbcType=VARCHAR, mode=OUT}
					                                          , #{p_err_msg,  jdbcType=VARCHAR, mode=OUT}
					                                          , #{companyCd,javaType=string,  jdbcType=VARCHAR , mode=IN}
					                                          , #{divisionCd, jdbcType=VARCHAR, mode=IN}
					                                          , TO_DATE(#{startDate,  jdbcType=VARCHAR, mode=IN},'YYYY-MM-DD')
					                                          , TO_DATE(#{endDate,    jdbcType=VARCHAR, mode=IN},'YYYY-MM-DD')
                                                              , #{arrayParam1,javaType=Object,jdbcType=ARRAY, jdbcTypeName=VARCHAR_ARRAY_LIST, mode=IN, typeHandler=com.mom.backend.util.ListMapTypeHandler}
					                                          , #{userId,     jdbcType=VARCHAR, mode=IN} )}    	              
  </select>  
    <select id="proc_customBtn1-4" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
          { CALL MOM_MASTER_INFO_PKG.xumd4040_wc_dayoff_proc(   #{p_err_code, jdbcType=VARCHAR, mode=OUT}
					                                          , #{p_err_msg,  jdbcType=VARCHAR, mode=OUT}
					                                          , #{companyCd,javaType=string,  jdbcType=VARCHAR , mode=IN}
					                                          , #{divisionCd, jdbcType=VARCHAR, mode=IN}
					                                          , TO_DATE(#{startDate,  jdbcType=VARCHAR, mode=IN},'YYYY-MM-DD')
					                                          , TO_DATE(#{endDate,    jdbcType=VARCHAR, mode=IN},'YYYY-MM-DD')
                                                              , #{arrayParam1,javaType=Object,jdbcType=ARRAY, jdbcTypeName=VARCHAR_ARRAY_LIST, mode=IN, typeHandler=com.mom.backend.util.ListMapTypeHandler}
					                                          , #{userId,     jdbcType=VARCHAR, mode=IN} )}    	              
  </select>  
  <insert id="create_createBtn1" parameterType="java.util.List">
   <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
     INTO MOM_SHIFT_SCHEDULE (
                  COMPANY_CD
                , DIVISION_CD
                , WORK_CENTER_CD
                , SHIFT_CD
                , APPLY_DATE
                , DAY_OFF_YN
                , DESCRIPTION
                , CREATE_BY
                , CREATE_DATE
                , UPDATE_BY
                , UPDATE_DATE )
      VALUES 
              (   #{item.companyCd, jdbcType=VARCHAR}
                , #{item.divisionCd, jdbcType=VARCHAR}
                , #{item.workCenterCd, jdbcType=VARCHAR}
                , #{item.shiftCd, jdbcType=VARCHAR}
                , #{item.applyDate, jdbcType=VARCHAR}
                , #{item.dayOffYn, jdbcType=VARCHAR}
                , #{item.description, jdbcType=VARCHAR}
                , #{item.userId, jdbcType=VARCHAR}
                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                , #{item.userId, jdbcType=VARCHAR}
                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
              )
   </foreach>
  </insert>
    <insert id="create_copyBtn1" parameterType="java.util.List">
   <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
     INTO MOM_SHIFT_SCHEDULE (
                  COMPANY_CD
                , DIVISION_CD
                , WORK_CENTER_CD
                , SHIFT_CD
                , APPLY_DATE
                , DAY_OFF_YN
                , DESCRIPTION
                , CREATE_BY
                , CREATE_DATE
                , UPDATE_BY
                , UPDATE_DATE )
      VALUES 
              (   #{item.companyCd, jdbcType=VARCHAR}
                , #{item.divisionCd, jdbcType=VARCHAR}
                , #{item.workCenterCd, jdbcType=VARCHAR}
                , #{item.shiftCd, jdbcType=VARCHAR}
                , #{item.applyDate, jdbcType=VARCHAR}
                , #{item.dayOffYn, jdbcType=VARCHAR}
                , #{item.description, jdbcType=VARCHAR}
                , #{item.userId, jdbcType=VARCHAR}
                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                , #{item.userId, jdbcType=VARCHAR}
                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
              )
   </foreach>
  </insert>
  <update id="modify_editBtn1" parameterType="java.util.List">
    <foreach collection="list" item="item" separator=";" open="DECLARE BEGIN" close=";END;">
      UPDATE MOM_SHIFT_SCHEDULE
      SET    SHIFT_CD = #{item.shiftCd, jdbcType=VARCHAR}         
           , DAY_OFF_YN = #{item.dayOffYn, jdbcType=VARCHAR}
           , DESCRIPTION = #{item.description, jdbcType=VARCHAR}
           , UPDATE_BY = #{item.userId, jdbcType=VARCHAR}
           , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
      WHERE  1=1
      AND    COMPANY_CD = #{item.companyCd, jdbcType=VARCHAR}
      AND    DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
      AND    WORK_CENTER_CD = #{item.workCenterCd, jdbcType=VARCHAR}
      AND    SHIFT_CD = #{item.shiftCd, jdbcType=VARCHAR}
      AND    APPLY_DATE = #{item.applyDate, jdbcType=VARCHAR}
    </foreach>
  </update>
  <delete id="remove_delBtn1" parameterType="java.util.List">
      DELETE FROM MOM_SHIFT_SCHEDULE
      <where>
       <foreach collection="list" item="item" open="" close="" separator="OR">
        (       COMPANY_CD = #{item.companyCd, jdbcType=VARCHAR}
           AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
           AND  WORK_CENTER_CD = #{item.workCenterCd, jdbcType=VARCHAR}
           AND  SHIFT_CD = #{item.shiftCd, jdbcType=VARCHAR}
           AND  APPLY_DATE = #{item.applyDate, jdbcType=VARCHAR}
        )
       </foreach>
      </where>
  </delete> 
</mapper>
