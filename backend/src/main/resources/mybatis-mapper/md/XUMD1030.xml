<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.XUMD1030">
   <select id="get_defaultInfo1" parameterType="java.util.HashMap"  resultType="com.mom.dto.LowerHashMap" fetchSize="1000">
	     	SELECT * 
	  FROM ( SELECT ROWNUM AS KEY_ID,
	                ROWNUM AS ID,
	                COUNT(*) OVER() AS TOTAL_COUNT,
                    A.*
                 <!--  , COUNT(*) OVER() AS ROW_COUNT  -->
      FROM (  
		 
		  SELECT MCD.COMPANY_CD
			     , MCD.COMPANY_NM
			     , MCD.DIVISION_CD
			     , MCD.DIVISION_NM
			     , MP.PARTNER_CD
			     , MP.PARTNER_NM
			     , MP.PARTNER_NM_ENG
			     , MP.PARTNER_TYPE
			     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MP.COMPANY_CD,MP.DIVISION_CD,'MD0018', MP.PARTNER_TYPE, #{langCd, jdbcType=VARCHAR})  FROM DUAL ) AS PARTNER_TYPE_NM
			     , MP.BUSINESS_NO
			     , MP.BUSINESS_ITEM
			     , MP.BUSINESS_TYPE
			     , MP.TEL_NO
			     , MP.FAX_NO
			     , MP.EMAIL
			     , MP.ADDRESS
			     , MP.REPRESENTATIVE_NM
			     , MP.PARTNER_USER_NM
			     , MP.USE_YN
			     , MP.DESCRIPTION
			     , MP.UPDATE_BY
			     , MP.UPDATE_DATE
			     , ( SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MP.COMPANY_CD,MP.DIVISION_CD,MP.UPDATE_BY) FROM DUAL) AS UPDATE_BY_NM
			FROM   MOM_COM_DIV_V MCD
			     , MOM_PARTNER MP
			WHERE  MCD.COMPANY_CD  = MP.COMPANY_CD
			AND    MCD.DIVISION_CD = MP.DIVISION_CD      
			AND    MCD.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}
		    AND    MCD.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}  		
			<if test="partnerCd != null and partnerCd != ''">
			AND (TRIM(UPPER(MP.PARTNER_CD)) LIKE '%' || TRIM(UPPER(#{partnerCd, jdbcType=VARCHAR})) || '%' )
			</if>
			<if test="partnerNm != null and partnerNm != ''">
		    AND (TRIM(UPPER(MP.PARTNER_NM)) LIKE '%' || TRIM(UPPER(#{partnerNm, jdbcType=VARCHAR})) || '%' )
			</if>
			<if test="partnerType != null and partnerType != ''">
		    AND MP.PARTNER_TYPE IN (${partnerType})
			</if>
		    <if test="useYn != null and useYn != ''">
		    AND MP.USE_YN = #{useYn, jdbcType=VARCHAR}
			</if>
		    ORDER BY  MP.PARTNER_NM	 ) A
        )    
         <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">    
     WHERE KEY_ID BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}	
         </if>														
	</select>
    <insert id="create_defaultInfo1" parameterType="java.util.List">  
        INSERT INTO MOM_PARTNER(
					              COMPANY_CD
								, DIVISION_CD
								, PARTNER_CD
								, PARTNER_NM
								, PARTNER_NM_ENG
								, PARTNER_TYPE
								, BUSINESS_NO
								, BUSINESS_ITEM
								, BUSINESS_TYPE
								, TEL_NO
								, FAX_NO
								, EMAIL
								, ADDRESS
								, REPRESENTATIVE_NM
								, PARTNER_USER_NM
								, USE_YN
								, DESCRIPTION
								, CREATE_BY
								, CREATE_DATE
								, UPDATE_BY
								, UPDATE_DATE
					         )     
        VALUES
                <foreach item="item" collection="list" index="i" separator=" " open="">
				          (    #{item.companyCd,     jdbcType=VARCHAR}
				             , #{item.divisionCd,    jdbcType=VARCHAR}
				             , #{item.partnerCd,     jdbcType=VARCHAR}
				             , #{item.partnerNm,     jdbcType=VARCHAR}
				             , #{item.partnerNmEng,  jdbcType=VARCHAR}
				             , #{item.partnerType,   jdbcType=VARCHAR}
				             , #{item.businessNo,    jdbcType=VARCHAR}
				             , #{item.businessItem,  jdbcType=VARCHAR}
				             , #{item.businessType,  jdbcType=VARCHAR}
				             , #{item.telNo,         jdbcType=VARCHAR}
				             , #{item.faxNo,         jdbcType=VARCHAR}
				             , #{item.email,         jdbcType=VARCHAR}
				             , #{item.address,       jdbcType=INTEGER}
				             , #{item.representativeNm,      jdbcType=VARCHAR}
				             , #{item.partnerUserNm,         jdbcType=VARCHAR}
				             , #{item.useYn,   				 jdbcType=VARCHAR}  
				             , #{item.description,           jdbcType=VARCHAR}    
				             , TRIM(#{item.userId,           jdbcType=VARCHAR})
				             , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
				             , TRIM(#{item.userId,   jdbcType=VARCHAR})
				             , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})  
				          )		             
	            </foreach>			               
   </insert>   
   <update id="modify_defaultInfo1" parameterType="java.util.List">     
     <foreach collection="list" item="item" separator=";" open="DECLARE BEGIN" close=";END;">
       UPDATE MOM_PARTNER
       SET    PARTNER_NM        = #{item.partnerNm,        jdbcType=VARCHAR}
			 , PARTNER_NM_ENG    = #{item.partnerNmEng,     jdbcType=VARCHAR}
			 , PARTNER_TYPE      = #{item.partnerType,      jdbcType=VARCHAR}
			 , BUSINESS_NO       = #{item.businessNo,       jdbcType=VARCHAR}
             , BUSINESS_ITEM     = #{item.businessItem,     jdbcType=VARCHAR}
             , BUSINESS_TYPE     = #{item.businessType,     jdbcType=VARCHAR}
             , TEL_NO            = #{item.telNo,            jdbcType=VARCHAR}
             , FAX_NO            = #{item.faxNo,            jdbcType=VARCHAR}
             , EMAIL             = #{item.email,            jdbcType=VARCHAR}
             , REPRESENTATIVE_NM = #{item.representativeNm, jdbcType=VARCHAR}
             , PARTNER_USER_NM   = #{item.partnerUserNm,    jdbcType=VARCHAR}
             , ADDRESS           = #{item.address,          jdbcType=VARCHAR}
		     , USE_YN 		     = #{item.useYn,            jdbcType=VARCHAR}
 		     , DESCRIPTION       = #{item.description,      jdbcType=VARCHAR}
		     , UPDATE_BY         = #{item.userId,           jdbcType=VARCHAR}
		     , UPDATE_DATE       = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR}, #{item.divisionCd, jdbcType=VARCHAR})
       WHERE   1=1
       AND     COMPANY_CD        = TRIM(#{item.companyCd,    jdbcType=VARCHAR})
       AND     DIVISION_CD       = TRIM(#{item.divisionCd,   jdbcType=VARCHAR}) 
       AND     PARTNER_CD        = TRIM(#{item.partnerCd,    jdbcType=VARCHAR})         
      </foreach>
   </update> 
   <delete id="remove_defaultInfo1" parameterType="java.util.List"> 
	   DELETE
	   FROM    MOM_PARTNER
       <where> 
        <foreach collection="list" item="item" open="" close="" separator="OR"> 
          (   
	               COMPANY_CD     = TRIM(#{item.companyCd,  jdbcType=VARCHAR})
	         AND   DIVISION_CD    = TRIM(#{item.divisionCd, jdbcType=VARCHAR}) 
	         AND   PARTNER_CD     = TRIM(#{item.partnerCd,    jdbcType=VARCHAR}) 
          )
        </foreach>
       </where>
   </delete>
   <insert id="upsert_defaultInfo1" parameterType="java.util.List">
      MERGE INTO MOM_PARTNER 
            USING( <foreach item="item" collection="list" index="i" separator="UNION" open="" close="">
                     SELECT #{item.companyCd, jdbcType=VARCHAR} as companyCd,
                            #{item.divisionCd, jdbcType=VARCHAR} as divisionCd,
                            #{item.partnerCd, jdbcType=VARCHAR} as partnerCd,
                            #{item.partnerNm, jdbcType=VARCHAR} as partnerNm,
                            #{item.partnerNmEng, jdbcType=VARCHAR} as partnerNmEng,
                            #{item.partnerType, jdbcType=VARCHAR} as partnerType,
                            #{item.businessNo, jdbcType=VARCHAR} as businessNo,
                            #{item.businessItem, jdbcType=VARCHAR} as businessItem,
                            #{item.businessType, jdbcType=VARCHAR} as businessType,
                            #{item.telNo, jdbcType=VARCHAR} as telNo,
                            #{item.faxNo, jdbcType=VARCHAR} as faxNo,
                            #{item.email, jdbcType=VARCHAR} as email,
                            #{item.address, jdbcType=VARCHAR} as address,
                            #{item.representativeNm, jdbcType=VARCHAR} as representativeNm,
                            #{item.partnerUserNm, jdbcType=VARCHAR} as partnerUserNm,
                            #{item.useYn, jdbcType=VARCHAR} as useYn,
                            #{item.description, jdbcType=VARCHAR} as description,
                            #{item.userId, jdbcType=VARCHAR} as createBy,
                            MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR}) as createDate,
                            #{item.userId, jdbcType=VARCHAR} as updateBy,
                            MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR}) as updateDate
                     FROM DUAL
                   </foreach> ) PARAM
            ON ( COMPANY_CD = PARAM.companyCd AND
                 DIVISION_CD = PARAM.divisionCd AND
                 PARTNER_CD = PARAM.partnerCd )
            WHEN MATCHED THEN 
                 UPDATE SET PARTNER_NM = PARAM.partnerNm
                          , PARTNER_NM_ENG = PARAM.partnerNmEng
                          , PARTNER_TYPE = PARAM.partnerType
                          , BUSINESS_NO = PARAM.businessNo
                          , BUSINESS_ITEM = PARAM.businessItem
                          , BUSINESS_TYPE = PARAM.businessType
                          , TEL_NO = PARAM.telNo
                          , FAX_NO = PARAM.faxNo
                          , EMAIL = PARAM.email
                          , ADDRESS = PARAM.address
                          , REPRESENTATIVE_NM = PARAM.representativeNm
                          , PARTNER_USER_NM = PARAM.partnerUserNm
                          , USE_YN = PARAM.useYn
                          , DESCRIPTION = PARAM.description
                          , CREATE_BY = PARAM.createBy
                          , CREATE_DATE = PARAM.createDate
                          , UPDATE_BY = PARAM.updateBy
                          , UPDATE_DATE = PARAM.updateDate
            WHEN NOT MATCHED THEN
                     INSERT ( COMPANY_CD
                            , DIVISION_CD
                            , PARTNER_CD
                            , PARTNER_NM
                            , PARTNER_NM_ENG
                            , PARTNER_TYPE
                            , BUSINESS_NO
                            , BUSINESS_ITEM
                            , BUSINESS_TYPE
                            , TEL_NO
                            , FAX_NO
                            , EMAIL
                            , ADDRESS
                            , REPRESENTATIVE_NM
                            , PARTNER_USER_NM
                            , USE_YN
                            , DESCRIPTION
                            , CREATE_BY
                            , CREATE_DATE
                            , UPDATE_BY
                            , UPDATE_DATE )
                     VALUES ( PARAM.companyCd
                            , PARAM.divisionCd
                            , PARAM.partnerCd
                            , PARAM.partnerNm
                            , PARAM.partnerNmEng
                            , PARAM.partnerType
                            , PARAM.businessNo
                            , PARAM.businessItem
                            , PARAM.businessType
                            , PARAM.telNo
                            , PARAM.faxNo
                            , PARAM.email
                            , PARAM.address
                            , PARAM.representativeNm
                            , PARAM.partnerUserNm
                            , PARAM.useYn
                            , PARAM.description
                            , PARAM.createBy
                            , PARAM.createDate
                            , PARAM.updateBy
                            , PARAM.updateDate )
  </insert>
</mapper>
