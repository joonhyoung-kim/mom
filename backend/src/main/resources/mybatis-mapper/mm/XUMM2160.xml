<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMM2160">
    <select id="get_findBtn1" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
    SELECT MII.COMPANY_CD
	     , MII.DIVISION_CD 
	     , MII.ITEM_INOUT_NO                  AS GR_NO      
	     , MII.ITEM_INOUT_SEQ                 AS SEQ
	     , TO_CHAR(MII.IO_DATE ,'YYYY-MM-DD') AS RECEIVE_DATE
	     , MII.IO_TYPE
	     , (SELECT MOM_COMMON_PKG.FN_GET_IO_TYPE_NAME(MII.COMPANY_CD, MII.DIVISION_CD, MII.IO_TYPE) FROM DUAL) AS IO_TYPE_NM
	     , MII.ITEM_INOUT_ID
	     , MII.ITEM_INOUT_ID         AS KEY_ID	     
	     , MII.LOCATION_CD           AS RECEIVE_LOCATION_CD                                          
	     , (SELECT MOM_COMMON_PKG.FN_GET_LOCATION_NAME(MII.COMPANY_CD, MII.DIVISION_CD, MII.LOCATION_CD) FROM DUAL) AS RECEIVE_LOCATION_NM
	     , MII.ITEM_ID
	     , MI.ITEM_NM
	     , MI.ITEM_SPEC
	     , MI.ITEM_TYPE
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MI.COMPANY_CD, MI.DIVISION_CD, 'MD0002', MI.ITEM_TYPE,  #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
	     , MII.INOUT_UNIT       AS STANDARD_UNIT
	     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MI.COMPANY_CD, MI.DIVISION_CD,MII.INOUT_UNIT)  FROM DUAL)  AS STANDARD_UNIT_NM
	     ,  MII.INOUT_QTY       AS STANDARD_UNIT_QTY
	     , MII.UNIT        
	     , (SELECT MOM_COMMON_PKG.fn_get_unit_name(MI.COMPANY_CD, MI.DIVISION_CD,MII.UNIT)  FROM DUAL)  AS UNIT_NM
	     , MII.QTY          AS RECEIVE_QTY
	     , MII.PARTNER_CD   AS VENDOR_CD
	     , MPI.VENDOR_NM
	     , MPI.DEPARTURE_VENDOR_CD
	     , MPI.DEPARTURE_VENDOR_NM
	     , MII.CURRENCY_CD
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MII.COMPANY_CD, MII.DIVISION_CD, 'SM0017', MII.CURRENCY_CD,  #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS CURRENCY_NM
	     , MII.EXCHANGE_RATE
	      ,MII.UNIT_PRICE 
	     , MII.AMOUNT
	     , MII.LOCAL_AMOUNT
	     , MPI.INOUT_TYPE
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPI.COMPANY_CD, MPI.DIVISION_CD, 'MM0012', MPI.INOUT_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS INOUT_TYPE_NM
	     , MPI.PURCHASE_INOUT_ID    
	     , MPI.PURCHASE_ORDER_ID
	     , MII.CREATE_BY   AS CREATE_USER_NO      
	     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MII.COMPANY_CD, MII.DIVISION_CD, MII.CREATE_BY) FROM DUAL ) AS CREATE_USER_NM      
	     , TO_CHAR(MII.CREATE_DATE ,'YYYY-MM-DD')     AS CREATE_DATE
	FROM   MOM_ITEM_INOUT MII
	     , MOM_ITEM MI
	     , MOM_PURCHASE_INOUT_V MPI
	WHERE  MII.COMPANY_CD   = MI.COMPANY_CD
	AND    MII.DIVISION_CD  = MI.DIVISION_CD
	AND    MII.ITEM_ID      = MI.ITEM_ID
	AND    MII.COMPANY_CD   = MPI.COMPANY_CD
	AND    MII.DIVISION_CD  = MPI.DIVISION_CD
	AND    MII.ITEM_ORDER_ID = MPI.PURCHASE_INOUT_ID
	AND    MII.COMPANY_CD    = #{companyCd, jdbcType=VARCHAR}
	AND    MII.DIVISION_CD   = #{divisionCd, jdbcType=VARCHAR}	
	AND    MII.IO_DATE  BETWEEN TO_DATE(#{rcvDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{rcvDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999
	AND    MII.IO_CATEGORY = 'I'
	<if    test="grNo != null and grNo != ''">
	AND    (UPPER(MII.ITEM_INOUT_NO) LIKE '%' || UPPER(#{grNo, jdbcType=VARCHAR}) || '%')	  
	</if>	
	<if test="vendorCd != null and vendorCd != ''">
	AND    MII.PARTNER_CD = #{vendorCd, jdbcType=VARCHAR}
	</if>	
	<if test="itemIdNm != null and itemIdNm != ''">
	AND    (UPPER(MI.ITEM_ID) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MI.ITEM_NM) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%')	  
	</if>
	<if test="itemType != null and itemType != ''">
	AND    MI.ITEM_TYPE IN (${itemType})
	</if>
	<if test="receiveLocationCd != null and receiveLocationCd != ''">
	AND    MII.LOCATION_CD = #{receiveLocationCd, jdbcType=VARCHAR}
	</if>	
	<if    test="purchaseInoutId != null and purchaseInoutId != ''">
	AND    (UPPER( MPI.PURCHASE_INOUT_ID ) LIKE '%' || UPPER(#{purchaseInoutId, jdbcType=VARCHAR}) || '%')	  
	</if>	
	<if test="ioType != null and ioType != ''">
	AND    MII.IO_TYPE IN (${ioType})
	</if>
	<if test="inoutType != null and inoutType != ''">
	AND    MII.INOUT_TYPE IN (${inoutType})
	</if>
	ORDER BY MII.ITEM_INOUT_ID
    </select>  
</mapper>    