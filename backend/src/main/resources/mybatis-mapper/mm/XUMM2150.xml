<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUMM2150">
    <select id="get_findBtn1" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
    SELECT MPIM.COMPANY_CD				
	     , MPIM.DIVISION_CD				
	     , MPIM.INOUT_NO     AS RECEIVE_NO	
	     , MPIM.INOUT_NO     AS KEY_ID		
	     , MPIM.INOUT_TYPE				
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, 'MM0012', MPIM.INOUT_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS INOUT_TYPE_NM  				
	     , MPIM.IO_TYPE 				
	     , (SELECT MOM_COMMON_PKG.FN_GET_IO_TYPE_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, MPIM.IO_TYPE) FROM DUAL)  AS IO_TYPE_NM				
	     , MPIM.TITLE        AS RECEIVE_TITLE				
	     , MPIM.VENDOR_CD				
	     , (SELECT MOM_COMMON_PKG.FN_GET_PARTNER_NAME(MPIM.COMPANY_CD,MPIM.DIVISION_CD,MPIM.VENDOR_CD) FROM DUAL) AS VENDOR_NM				
	     , MPIM.DEPARTURE_VENDOR_CD				
	     , (SELECT MOM_COMMON_PKG.FN_GET_PARTNER_NAME(MPIM.COMPANY_CD,MPIM.DIVISION_CD,MPIM.DEPARTURE_VENDOR_CD) FROM DUAL) AS DEPARTURE_VENDOR_NM				
	     , MPIM.DEPARTURE_LOCATION_CD				
	     , (SELECT MOM_COMMON_PKG.FN_GET_LOCATION_NAME(MPIM.COMPANY_CD,MPIM.DIVISION_CD,MPIM.DEPARTURE_LOCATION_CD) FROM DUAL) AS DEPARTURE_LOCATION_NM				
	     , MPIM.BL_NO				
	     , MPIM.IP_NO				
	     , MPIM.IP_CURRENCY_CD				
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, 'SM0017', MPIM.IP_CURRENCY_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS IP_CURRENCY_NM				
	     , MPIM.IP_EXCHANGE_RATE				
	     , TO_CHAR(MPIM.CC_DATE ,'YYYY-MM-DD')     AS CC_DATE				
	     , MPIM.LC_NO				
	     , MPIM.IQC_FLAG				
	     , MPIM.CURRENCY_CD				
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, 'SM0017', MPIM.CURRENCY_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS CURRENCY_NM				
	     , MPIM.EXCHANGE_RATE				
	     , MPIM.AMOUNT           AS RECEIVE_AMOUNT				
	     , TO_CHAR(MPIM.DEPARTURE_DATE ,'YYYY-MM-DD')     AS DEPARTURE_DATE				
	     , MPIM.VENDOR_INVOICE				
	     , MPIM.FREE_YN         AS FREE_YN				
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, 'MM0015', MPIM.FREE_YN, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS FREE_YN_NM				
	     , MPIM.REASON_CD   AS EXP_RCV_REASON_CD				
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, 'MM0016', MPIM.REASON_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS EXP_RCV_REASON_NM				
	     , MPIM.DESCRIPTION				
	     , MPIM.CREATE_BY   AS CREATE_USER_NO				
	     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MPIM.COMPANY_CD, MPIM.DIVISION_CD, MPIM.CREATE_BY) FROM DUAL ) AS CREATE_USER_NM				
         , TO_CHAR(MPIM.CREATE_DATE ,'YYYY-MM-DD')     AS CREATE_DATE				
	FROM   MOM_PURCHASE_INOUT_MST MPIM				
	WHERE  MPIM.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}				
	AND    MPIM.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}			
	AND    MPIM.CREATE_DATE BETWEEN TO_DATE(#{createDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{createDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999 			
    <if test="receiveNo != null and receiveNo != ''">
    AND    (UPPER(MPIM.INOUT_NO) LIKE '%' || UPPER(#{receiveNo, jdbcType=VARCHAR}) || '%')	  
    </if>			
    <if test="vendorCd != null and vendorCd != ''">
    AND    MPIM.VENDOR_CD = #{vendorCd, jdbcType=VARCHAR}
    </if>				
    <if test="receiveTitle != null and receiveTitle != ''">
    AND    (UPPER(MPIM.TITLE) LIKE '%' || UPPER(#{receiveTitle, jdbcType=VARCHAR}) || '%')	  
    </if>				
    <if test="departureLocationCd != null and departureLocationCd != ''">
    AND     MPIM.DEPARTURE_LOCATION_CD = #{departureLocationCd, jdbcType=VARCHAR}
    </if>				
    <if test="iqcFlag != null and iqcFlag != ''">
    AND     MPIM.IQC_FLAG = #{iqcFlag, jdbcType=VARCHAR}
    </if>				
    AND     EXISTS ( SELECT  '*'				
                     FROM    MOM_PURCHASE_INOUT_DTL MPID				
                     WHERE   MPIM.COMPANY_CD   = MPID.COMPANY_CD				
                     AND     MPIM.DIVISION_CD  = MPID.DIVISION_CD				
                     AND     MPIM.INOUT_NO     = MPID.INOUT_NO				
                     AND     MPID.STATE        IN ('PIWR', 'NCPC') )				
    ORDER BY MPIM.INOUT_NO					
    </select>
	<select id="get_findBtn2" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
    SELECT MPID.COMPANY_CD		
	     , MPID.DIVISION_CD		
	     , MPID.INOUT_NO          AS RECEIVE_NO		
	     , TO_CHAR(ROWNUM)        AS KEY_ID
	     , MPID.SEQ		
	     , MPID.PURCHASE_ORDER_ID			
	     , MPID.ITEM_ID		
	     , MI.ITEM_NM		
	     , MI.ITEM_SPEC 		
	     , MI.ITEM_TYPE		
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPID.COMPANY_CD, MPID.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, 'KR') FROM DUAL)  AS ITEM_TYPE_NM		
	     , MI.PURCHASE_UNIT		
	     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MPID.COMPANY_CD, MPID.DIVISION_CD, MI.PURCHASE_UNIT) FROM DUAL) AS PURCHASE_UNIT_NM			
	     , CASE WHEN MC.NCPC_NO IS NOT NULL THEN MC.GOOD_QTY ELSE MPID.INOUT_QTY END  AS RECEIVE_WAIT_QTY			
	     , CASE WHEN MC.NCPC_NO IS NOT NULL THEN MC.UNIT_PRICE ELSE MPID.UNIT_PRICE END  AS UNIT_PRICE 			
	     , CASE WHEN MC.NCPC_NO IS NOT NULL THEN MC.AMOUNT ELSE MPID.AMOUNT END  AS AMOUNT			
	     , CASE WHEN MC.NCPC_NO IS NOT NULL THEN MC.LOCAL_AMOUNT ELSE MPID.LOCAL_AMOUNT END  AS LOCAL_AMOUNT		
	     , MPID.DESCRIPTION		
	     , MPID.PURCHASE_INOUT_ID			
	FROM   MOM_PURCHASE_INOUT_DTL MPID				
         , MOM_NCPC MC                                                                              				
         , MOM_ITEM MI				
	WHERE  MPID.COMPANY_CD  = MC.COMPANY_CD(+)                                                         				
	AND    MPID.DIVISION_CD = MC.DIVISION_CD(+)                                                         				
	AND    MPID.NCR_NO      = MC.NCR_NO(+)                                                             				
    AND    MPID.COMPANY_CD  = MI.COMPANY_CD				  
	AND    MPID.DIVISION_CD = MI.DIVISION_CD				
	AND    MPID.ITEM_ID     = MI.ITEM_ID						
	AND    MPID.COMPANY_CD  = #{companyCd, jdbcType=VARCHAR}		
	AND    MPID.DIVISION_CD = #{divisionCd, jdbcType=VARCHAR}	
	AND    MPID.INOUT_NO    = #{receiveNo, jdbcType=VARCHAR}			
	AND     MPID.STATE      IN ('PIWR', 'NCPC')			
	ORDER BY MPID.INOUT_NO 			
	       , MPID.SEQ			
    </select>
    <delete id="remove_customBtn2-1" parameterType="java.util.List">
    DELETE FROM MOM_PROC_PURCHASE_GR
        <where>
            <foreach collection="list" item="item" open="" close="" separator="OR">
	        (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
	           AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
	           AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
	        )
            </foreach>
        </where>
    </delete>  
    <insert id="create_customBtn2-1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_PURCHASE_GR( COMPANY_CD
				                 , DIVISION_CD
				                 , INOUT_TYPE
				                 , INOUT_NO
				                 , SEQ
				                 , PURCHASE_INOUT_ID
				                 , PURCHASE_ORDER_ID
				                 , VENDOR_CD
				                 , LOCATION_CD
				                 , ITEM_ID
				                 , IO_TYPE
				                 , INOUT_QTY
				                 , INOUT_UNIT
				                 , UNIT_PRICE
				                 , AMOUNT
				                 , LOCAL_AMOUNT
				                 , EXCHANGE_RATE
				                 , CURRENCY_CD
				                 , LOT_ID
				                 , DESCRIPTION
				                 , VAL_MSG
				                 , MULTI_MSG
				                 , CREATE_BY
				                 , CREATE_DATE )
        VALUES                   ( #{item.companyCd, jdbcType=VARCHAR}
				                 , #{item.divisionCd, jdbcType=VARCHAR}
				                 , #{item.inoutType, jdbcType=VARCHAR}
				                 , #{item.receiveNo, jdbcType=VARCHAR}
				                 , #{item.seq, jdbcType=NUMERIC}
				                 , #{item.purchaseInoutId, jdbcType=VARCHAR}
				                 , #{item.purchaseOrderId, jdbcType=VARCHAR}
				                 , #{item.vendorCd, jdbcType=VARCHAR}
				                 , #{item.locationCd, jdbcType=VARCHAR}
				                 , #{item.itemId, jdbcType=VARCHAR}
				                 , #{item.ioType, jdbcType=VARCHAR}
				                 , #{item.receiveWaitQty, jdbcType=NUMERIC}
				                 , #{item.purchaseUnit, jdbcType=VARCHAR}
				                 , #{item.unitPrice, jdbcType=NUMERIC}
				                 , #{item.amount, jdbcType=NUMERIC}
				                 , #{item.localAmount, jdbcType=NUMERIC}
				                 , #{item.exchangeRate, jdbcType=NUMERIC}
				                 , #{item.currencyCd, jdbcType=VARCHAR}
				                 , #{item.lotId, jdbcType=VARCHAR}
				                 , #{item.description, jdbcType=VARCHAR}
				                 , #{item.valMsg, jdbcType=VARCHAR}
				                 , #{item.multiMsg, jdbcType=VARCHAR}
				                 , #{item.userId, jdbcType=VARCHAR}
				                 , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                                 )
        </foreach>
    </insert>
    <select id="proc_customBtn2-1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
    { CALL MOM_MATERIAL_PKG.sp_purchase_goods_receipt( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
					                                 , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
					                                 , #{companyCd,   jdbcType=VARCHAR, mode=IN}
					                                 , #{divisionCd,  jdbcType=VARCHAR, mode=IN}											  
					                                 , #{userId,      jdbcType=VARCHAR, mode=IN} )}    	              
    </select>  
</mapper>