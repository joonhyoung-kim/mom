<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUSM8100">
    <!-- 발주확정 현황 -->
    <select id="get_findBtn21" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">
	SELECT A.PO_NO
	     , A.PO_SEQ
	     , A.ITEM_ID
	     , A.ITEM_NM
	     , A.DELIVER_CONFIRM_DATE     
	     , A.PO_QTY
	     , A.PO_OVER_RECEIPT_QTY
	     , A.DEPATURE_QTY
	     , A.RECEIVE_QTY
	     , (A.PO_OVER_RECEIPT_QTY -  A.RECEIVE_QTY) AS REMAIN_QTY
	     , ''                              AS RECEIVE_REQUEST_QTY
	     , A.VENDOR_CD
	     , (SELECT MOM_COMMON_PKG.FN_GET_PARTNER_NAME(A.COMPANY_CD,A.DIVISION_CD,A.VENDOR_CD) FROM DUAL) AS VENDOR_NM
	     , A.DEPARTURE_LOCATION_CD
	     , (SELECT MOM_COMMON_PKG.FN_GET_LOCATION_NAME(A.COMPANY_CD,A.DIVISION_CD,A.DEPARTURE_LOCATION_CD) FROM DUAL) AS DEPARTURE_LOCATION_NM
	     , A.IQC_FLAG
	     , A.CURRENCY_CD
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.COMPANY_CD, A.DIVISION_CD, 'SM0017', A.CURRENCY_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS CURRENCY_NM
	     , A.EXCHANGE_RATE
	     , A.UNIT_PRICE
	     , A.AMOUNT
	     , A.LOCAL_AMOUNT
	     , A.PAYMENT_METHOD
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.COMPANY_CD, A.DIVISION_CD, 'MM0006', A.PAYMENT_METHOD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS PAYMENT_METHOD_NM
	     , A.PRICE_TERMS
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.COMPANY_CD, A.DIVISION_CD, 'MM0007', A.PRICE_TERMS, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS PRICE_TERMS_NM
	     , A.PAYMENT_TERMS
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.COMPANY_CD, A.DIVISION_CD, 'MM0008', A.PAYMENT_TERMS, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS PAYMENT_TERMS_NM
	     , A.SHIPPING_METHOD
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.COMPANY_CD, A.DIVISION_CD, 'MM0009', A.SHIPPING_METHOD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS SHIPPING_METHOD_NM
	     , A.PO_CREATE_DATE
	     , A.PO_USER_NO
	     , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(A.COMPANY_CD, A.DIVISION_CD, A.PO_USER_NO) FROM DUAL ) AS PO_USER_NM
	     , A.TEST_REPORT_FLAG
	     , A.MAKER
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.COMPANY_CD, A.DIVISION_CD, 'MD0007', A.MAKER, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS MAKER_NM
	     , A.ITEM_SPEC
	     , A.ITEM_TYPE
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.COMPANY_CD, A.DIVISION_CD, 'MD0002', A.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM
	     , A.PURCHASE_UNIT
	     , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(A.COMPANY_CD, A.DIVISION_CD, A.PURCHASE_UNIT) FROM DUAL) AS PURCHASE_UNIT_NM
	     , A.PROCUREMENT_TYPE
	     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(A.COMPANY_CD, A.DIVISION_CD, 'MD0004', A.PROCUREMENT_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS PROCUREMENT_TYPE_NM
	     , A.PO_OVER_RECEIPT_RATE
	     , A.PO_TITLE
	     , A.PO_TYPE
	     , (SELECT MOM_COMMON_PKG.FN_GET_PO_TYPE_NAME(A.COMPANY_CD, A.DIVISION_CD, A.PO_TYPE) FROM DUAL) AS PO_TYPE_NM 
	     , A.PO_DUE_DATE    
	     , A.PO_DEPT_CD
	     , (SELECT MOM_COMMON_PKG.FN_GET_DEPARTMENT_NAME(A.COMPANY_CD, A.DIVISION_CD, A.PO_DEPT_CD) FROM DUAL) AS PO_DEPT_NM
	     , A.CONFIRM_DATE
	     , A.PURCHASE_ORDER_ID
	     , A.PURCHASE_ORDER_ID AS KEY_ID
	     , A.COMPANY_CD
	     , A.DIVISION_CD
	FROM  ( SELECT MPM.PO_NO
	             , MPD.PO_SEQ
	             , MPM.PO_TITLE
	             , MPM.PO_TYPE
	             , MPD.ITEM_ID
	             , TO_CHAR(MPM.PO_DUE_DATE ,'YYYY-MM-DD')            AS PO_DUE_DATE     
	             , TO_CHAR(MPD.DELIVER_CONFIRM_DATE ,'YYYY-MM-DD')   AS DELIVER_CONFIRM_DATE     
	             , MPD.CONFIRM_QTY           AS PO_QTY
	             , MPD.CONFIRM_QTY + NVL(DECODE(NVL(MPD.PO_OVER_RECEIPT_RATE,0), 0, 0, (MPD.CONFIRM_QTY * ( MPD.PO_OVER_RECEIPT_RATE / 100) )),0) AS PO_OVER_RECEIPT_QTY
	             , NVL(MPD.PROGRESS_QTY,0)    AS  DEPATURE_QTY
	             , MPM.CURRENCY_CD
	             , MPD.UNIT_PRICE
	             , MPM.EXCHANGE_RATE
	             , MPD.AMOUNT
	             , MPD.LOCAL_AMOUNT
	             , MI.PURCHASE_UNIT
	             , MPD.DEPARTURE_LOCATION_CD
	             , MPM.PAYMENT_METHOD
	             , MPM.PRICE_TERMS
	             , MPM.PAYMENT_TERMS
	             , MPM.SHIPPING_METHOD
	             , TO_CHAR(MPM.CREATE_DATE ,'YYYY-MM-DD')   AS PO_CREATE_DATE
	             , MPM.CREATE_BY          AS PO_USER_NO
	             , MPM.CREATE_DEPT_CD     AS PO_DEPT_CD
	             , TO_CHAR(MPM.CONFIRM_DATE ,'YYYY-MM-DD')   AS CONFIRM_DATE
	             , MI.ITEM_NM
	             , MI.ITEM_SPEC
	             , MI.ITEM_TYPE
	             , MI.TEST_REPORT_FLAG
	             , MPD.IQC_FLAG
	             , MI.MAKER
	             , MI.PROCUREMENT_TYPE
	             , MPM.VENDOR_CD
	             , MPD.PURCHASE_ORDER_ID
	             , MPD.PO_OVER_RECEIPT_RATE
	             , MPD.COMPANY_CD
	             , MPD.DIVISION_CD
	             , NVL(MPD.PROGRESS_QTY,0)    AS  RECEIVE_QTY
	             , DECODE(MPC.MARKET_CD, 'D', 'RD', 'O', 'RO') AS INOUT_TYPE
	        FROM   MOM_PO_MST MPM 
	             , MOM_PO_DTL MPD  
	             , MOM_ITEM MI
	             , MOM_PO_CATEGORY MPC
	        WHERE  MPM.COMPANY_CD    = MPD.COMPANY_CD
	        AND    MPM.DIVISION_CD   = MPD.DIVISION_CD
	        AND    MPM.PO_NO         = MPD.PO_NO
	        AND    MPM.COMPANY_CD    = MI.COMPANY_CD
	        AND    MPM.DIVISION_CD   = MI.DIVISION_CD
	        AND    MPD.ITEM_ID       = MI.ITEM_ID
	        AND    MPM.COMPANY_CD    = MPC.COMPANY_CD
	        AND    MPM.DIVISION_CD   = MPC.DIVISION_CD
	        AND    MPM.PO_TYPE       = MPC.PO_TYPE 
	        AND    MPM.COMPANY_CD    = #{companyCd, jdbcType=VARCHAR}
	        AND    MPM.DIVISION_CD   = #{divisionCd, jdbcType=VARCHAR}
	        AND    MPM.DO_INVOICE_YN = 'N'
	        AND    MPC.MARKET_CD = DECODE(#{inoutType, jdbcType=VARCHAR}, 'RD', 'D', 'O')
	        AND    MPD.STATE         = 'POF'  --확정
	        <if test="vendorCd != null and vendorCd != ''">
	        AND    MPM.VENDOR_CD     = #{vendorCd, jdbcType=VARCHAR}
	        </if>
	        <if test="departureLocationCd != null and departureLocationCd != ''">
	        AND    MPD.DEPARTURE_LOCATION_CD = #{departureLocationCd, jdbcType=VARCHAR}
	        </if>
	        <if test="iqcFlag != null and iqcFlag != ''">
	        AND    MPD.IQC_FLAG              = #{iqcFlag, jdbcType=VARCHAR}
	        </if>
	        <if test="currencyCd != null and currencyCd != ''">
	        AND    MPM.CURRENCY_CD           = #{currencyCd, jdbcType=VARCHAR}
	        </if>
	      ) A
	WHERE  A.PO_OVER_RECEIPT_QTY -  NVL(A.RECEIVE_QTY, 0) > 0      
	ORDER BY A.COMPANY_CD
	       , A.DIVISION_CD
	       , A.PURCHASE_ORDER_ID
    </select>
    <delete id="remove_customBtn21-1" parameterType="java.util.List">
	DELETE FROM MOM_PROC_PI_DTL
	    <where>
	        <foreach collection="list" item="item" open="" close="" separator="OR">
            (    COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
            AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
            AND  INOUT_TYPE  = #{item.inoutType, jdbcType=VARCHAR}
            AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
            )
	        </foreach>
	    </where>
    </delete>  
    <insert id="create_customBtn21-1" parameterType="java.util.List">
        <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
        INTO MOM_PROC_PI_DTL( COMPANY_CD
			                , DIVISION_CD
			                , INOUT_TYPE
			                , INOUT_NO
			                , SEQ
			                , PURCHASE_INOUT_ID
			                , ITEM_ID
			                , UNIT_PRICE
			                , INOUT_QTY
			                , PURCHASE_ORDER_ID
			                , DESCRIPTION
			                , DEL_YN
			                , VAL_MSG
			                , MULTI_MSG
			                , CREATE_BY
			                , CREATE_DATE )
        VALUES              ( #{item.companyCd, jdbcType=VARCHAR}
			                , #{item.divisionCd, jdbcType=VARCHAR}
			                , #{item.inoutType, jdbcType=VARCHAR}
			                , #{item.inoutNo, jdbcType=VARCHAR}
			                , #{item.seq, jdbcType=NUMERIC}
			                , #{item.purchaseInoutId, jdbcType=VARCHAR}
			                , #{item.itemId, jdbcType=VARCHAR}
			                , #{item.unitPrice, jdbcType=NUMERIC}	 
						    , #{item.receiveRequestQty, jdbcType=NUMERIC}
			                , #{item.purchaseOrderId, jdbcType=VARCHAR}
			                , #{item.description, jdbcType=VARCHAR}
			                , #{item.delYn, jdbcType=VARCHAR}
			                , #{item.valMsg, jdbcType=VARCHAR}
			                , #{item.multiMsg, jdbcType=VARCHAR}
			                , #{item.userId, jdbcType=VARCHAR}
			                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                            )
        </foreach>
    </insert>
    <select id="proc_customBtn21-1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
    { CALL MOM_MATERIAL_PKG.SP_UPSERT_PI_DTL( #{p_err_code,  jdbcType=VARCHAR, mode=OUT}
	                                        , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
                                            , #{companyCd,   jdbcType=VARCHAR , mode=IN}
                                            , #{divisionCd,  jdbcType=VARCHAR, mode=IN}			
                                            , #{inoutType,   jdbcType=VARCHAR, mode=IN}										  
                                            , #{userId,      jdbcType=VARCHAR, mode=IN} )}    	              
    </select>    
</mapper>
