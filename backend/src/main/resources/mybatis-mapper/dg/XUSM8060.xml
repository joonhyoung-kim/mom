<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUSM8060">
 <!-- 구매요청 미발주 현황 -->
 <select id="get_findBtn21" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">
    SELECT  MPD.PURCHASE_REQUEST_ID   
          , MPD.PURCHASE_REQUEST_ID  AS KEY_ID  
	      , MPM.PR_TYPE
	      , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPM.COMPANY_CD, MPM.DIVISION_CD, 'MM0001', MPM.PR_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS PR_TYPE_NM    
	      , MPM.PR_TITLE
	      , TO_CHAR(MPD.DUE_DATE ,'YYYY-MM-DD')   AS REQUEST_DUE_DATE    
	      , MPM.REQUEST_DEPT_CD
	      , (SELECT MOM_COMMON_PKG.FN_GET_DEPARTMENT_NAME(MPM.COMPANY_CD, MPM.DIVISION_CD, MPM.REQUEST_DEPT_CD) FROM DUAL) AS REQUEST_DEPT_NM
	      , MPD.PO_USER_NO 
	      , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MPD.COMPANY_CD, MPD.DIVISION_CD, MPD.PO_USER_NO) FROM DUAL ) AS PO_USER_NM
	      , MPD.ITEM_ID
	      , MPD.CONFIRM_QTY                       AS REQUEST_QTY
	      , MPD.PO_QTY
	      , MPD.CONFIRM_QTY - NVL(MPD.PO_QTY, 0)  AS REMAIN_QTY
	      , MPD.CONFIRM_QTY - NVL(MPD.PO_QTY, 0)  AS PO_REQUEST_QTY
	      , MPD.UNIT_PRICE  AS REF_UNIT_PRICE
	      , ( SELECT  MOM_COMMON_PKG.FN_GET_UNIT_PRICE(MPD.COMPANY_CD, MPD.DIVISION_CD,'P', #{vendorCd, jdbcType=VARCHAR},MPD.ITEM_ID,MPD.CURRENCY_CD, 'F', MOM_COMMON_PKG.FN_GET_LOCAL_TIME(MPD.COMPANY_CD,MPD.DIVISION_CD)) FROM DUAL) AS CONFIRM_UNIT_PRICE
	      , MI.VENDOR_CD  AS REF_VENDOR_CD
	      , (SELECT MOM_COMMON_PKG.FN_GET_PARTNER_NAME(MPD.COMPANY_CD,MPD.DIVISION_CD,MI.VENDOR_CD) FROM DUAL) AS REF_VENDOR_NM
	      , MPD.CURRENCY_CD
	      , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPD.COMPANY_CD, MPD.DIVISION_CD, 'SM0017', MPD.CURRENCY_CD, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS CURRENCY_NM    
	      , MPD.EXCHANGE_RATE
	      , MPD.AMOUNT
	      , MPD.LOCAL_AMOUNT
	      , MI.IN_LOCATION_CD  AS DEPARTURE_LOCATION_CD
	      , (SELECT MOM_COMMON_PKG.FN_GET_LOCATION_NAME(MPD.COMPANY_CD,MPD.DIVISION_CD,MI.IN_LOCATION_CD) FROM DUAL) AS DEPARTURE_LOCATION_NM
	      , MI.ITEM_NM
	      , MI.ITEM_SPEC
	      , MI.ITEM_TYPE
	      , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPD.COMPANY_CD, MPD.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS ITEM_TYPE_NM    
	      , MI.PURCHASE_UNIT
	      , (SELECT MOM_COMMON_PKG.FN_GET_UNIT_NAME(MI.COMPANY_CD, MI.DIVISION_CD, MI.PURCHASE_UNIT) FROM DUAL) AS PURCHASE_UNIT_NM
	      , MI.MAKER
	      , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPD.COMPANY_CD, MPD.DIVISION_CD, 'MD0007', MI.MAKER, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS MAKER_NM          
	      , MI.DEPARTURE_VENDOR_CD
	      , (SELECT MOM_COMMON_PKG.FN_GET_PARTNER_NAME(MPD.COMPANY_CD,MPD.DIVISION_CD,MI.DEPARTURE_VENDOR_CD) FROM DUAL) AS DEPARTURE_VENDOR_NM
	      , MPM.REFERENCE_NO
	      , MPD.DESCRIPTION
	      , TO_CHAR(MPM.REQUEST_DATE ,'YYYY-MM-DD')   AS REQUEST_DATE  
	      , MPM.REQUEST_USER_NO
	      , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MPM.COMPANY_CD, MPM.DIVISION_CD, MPM.REQUEST_USER_NO) FROM DUAL ) AS REQUEST_USER_NM
	      , TO_CHAR(MPM.CONFIRM_DATE ,'YYYY-MM-DD')   AS CONFIRM_DATE
	      , MPM.CONFIRM_USER_NO
	      , (SELECT MOM_COMMON_PKG.FN_GET_DEPARTMENT_NAME(MPM.COMPANY_CD, MPM.DIVISION_CD, MPM.CONFIRM_USER_NO) FROM DUAL) AS CONFIRM_USER_NM
	      , TO_CHAR(MPD.RECEIVE_DATE ,'YYYY-MM-DD')   AS RECEIVE_DATE
	      , MPD.RECEIVE_USER_NO  
	      , (SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MPD.COMPANY_CD, MPD.DIVISION_CD, MPD.RECEIVE_USER_NO) FROM DUAL ) AS RECEIVE_USER_NM    
	      , MI.PROCUREMENT_TYPE
	      , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MPD.COMPANY_CD, MPD.DIVISION_CD, 'MD0004', MI.PROCUREMENT_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL)  AS PROCUREMENT_TYPE_NM    
	      , MPD.COMPANY_CD
	      , MPD.DIVISION_CD
	      , MPD.PR_NO
	      , MPD.PR_SEQ                  
	      , NVL(MI.TEST_REPORT_FLAG, 'N')     AS TEST_REPORT_FLAG
	      , NVL(MI.IQC_FLAG, 'N')             AS IQC_FLAG
	      , NVL(MI.LOT_MANAGEMENT_YN, 'N')    AS LOT_MANAGEMENT_YN
	      , NVL(MI.PRICE_SYNC_YN, 'N')        AS PRICE_SYNC_YN
	      , NVL(MI.PO_OVER_RECEIPT_RATE, 20)  AS PO_OVER_RECEIPT_RATE        
	FROM    MOM_PR_DTL MPD
	      , MOM_PR_MST MPM   
	      , MOM_ITEM MI
	WHERE   MPD.COMPANY_CD   = MPM.COMPANY_CD
	AND     MPD.DIVISION_CD  = MPM.DIVISION_CD
	AND     MPD.PR_NO        = MPM.PR_NO
	AND     MPD.COMPANY_CD   = MI.COMPANY_CD
	AND     MPD.DIVISION_CD  = MI.DIVISION_CD
	AND     MPD.ITEM_ID      = MI.ITEM_ID
	AND     MPD.COMPANY_CD   = #{companyCd, jdbcType=VARCHAR}                          
	AND     MPD.DIVISION_CD  = #{divisionCd, jdbcType=VARCHAR}						   
	AND     MPD.STATE        = 'PRR'       -- 접수건 
	AND     MPD.RECEIVE_DATE  BETWEEN TO_DATE(#{receiveDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{receiveDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999  
	<if test="prNo != null and prNo != ''">
	AND (UPPER(MPM.PR_NO) LIKE '%' || UPPER(#{prNo, jdbcType=VARCHAR}) || '%')	  
	</if>
	<if test="requestDeptCd != null and requestDeptCd != ''">
	AND MPM.REQUEST_DEPT_CD = #{requestDeptCd, jdbcType=VARCHAR}
	</if>	
	<if test="itemIdNm != null and itemIdNm != ''">
	AND (UPPER(MD.ITEM_ID) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MI.ITEM_NM) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%')	  
	</if>
    <if test="refVendorCd != null and refVendorCd != ''">
	AND MI.VENDOR_CD = #{refVendorCd, jdbcType=VARCHAR}
	</if>	
    <if test="poUserNo != null and poUserNo != ''">
	AND MPD.PO_USER_NO = #{poUserNo, jdbcType=VARCHAR}
	</if>	
	ORDER BY MPD.PR_NO
	       , MPD.PR_SEQ
 </select>
   <delete id="remove_customBtn21-1" parameterType="java.util.List">
       DELETE FROM MOM_PROC_PO_DTL
      <where>
       <foreach collection="list" item="item" open="" close="" separator="OR">
        (       COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
           AND  DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
           AND  CREATE_BY   = #{item.userId, jdbcType=VARCHAR}
        )
       </foreach>
      </where>
   </delete>  
   <insert id="create_customBtn21-1" parameterType="java.util.List">
      <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
     INTO MOM_PROC_PO_DTL (
                  COMPANY_CD
                , DIVISION_CD
                , PO_NO
                , PO_SEQ
                , PURCHASE_ORDER_ID
                , PO_REFERENCE_NO
                , ITEM_ID
                , PO_REQUEST_QTY
                , REF_UNIT_PRICE
                , CONFIRM_UNIT_PRICE
                , DEPARTURE_LOCATION_CD
                , TEST_REPORT_FLAG
                , IQC_FLAG
                , LOT_MANAGEMENT_YN
                , PRICE_SYNC_YN
                , PO_OVER_RECEIPT_RATE
                , DESCRIPTION
                , DEL_YN
                , VAL_MSG
                , MULTI_MSG
                , CREATE_BY
                , CREATE_DATE )
      VALUES 
              (   #{item.companyCd, jdbcType=VARCHAR}
                , #{item.divisionCd, jdbcType=VARCHAR}
                , #{item.poNo, jdbcType=VARCHAR}
                , #{item.poSeq, jdbcType=NUMERIC}
                , #{item.purchaseOrderId, jdbcType=VARCHAR}
                , #{item.purchaseRequestId, jdbcType=VARCHAR}
                , #{item.itemId, jdbcType=VARCHAR}
                , #{item.poRequestQty, jdbcType=NUMERIC}
                , #{item.refUnitPrice, jdbcType=NUMERIC}
                , #{item.confirmUnitPrice, jdbcType=NUMERIC}
                , #{item.departureLocationCd, jdbcType=VARCHAR}
                , #{item.testReportFlag, jdbcType=VARCHAR}
                , #{item.iqcFlag, jdbcType=VARCHAR}
                , #{item.lotManagementYn, jdbcType=VARCHAR}
                , #{item.priceSyncYn, jdbcType=VARCHAR}
                , #{item.poOverReceiptRate, jdbcType=NUMERIC}
                , #{item.description, jdbcType=VARCHAR}
                , #{item.delYn, jdbcType=VARCHAR}
                , #{item.valMsg, jdbcType=VARCHAR}
                , #{item.multiMsg, jdbcType=VARCHAR}
                , #{item.userId, jdbcType=VARCHAR}
                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
              )
   </foreach>
  </insert>
    <select id="proc_customBtn21-1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
          { CALL MOM_MATERIAL_PKG.sp_upsert_po_dtl(     		#{p_err_code,  jdbcType=VARCHAR, mode=OUT}
					                                          , #{p_err_msg,   jdbcType=VARCHAR, mode=OUT}
					                                          , #{companyCd,   javaType=string,  jdbcType=VARCHAR , mode=IN}
					                                          , #{divisionCd,  jdbcType=VARCHAR, mode=IN}											  
					                                          , #{userId,      jdbcType=VARCHAR, mode=IN} )}    	              
    </select>    
</mapper>
