<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.XUPP1030">
	<select id="get_defaultInfo1" parameterType="java.util.HashMap" resultType="com.mom.dto.LowerHashMap" fetchSize="1000">
		SELECT MCD.COMPANY_CD
		     , MCD.COMPANY_NM
		     , MCD.DIVISION_CD
		     , MCD.DIVISION_NM
		     , MD.DEMAND_ID
		     , MD.DEMAND_ID AS KEY_ID
		     , MD.DEMAND_TYPE
		     , MD.PRIORITY
             , MD.DESCRIPTION
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MD.COMPANY_CD,MD.DIVISION_CD, 'PP0001', MD.DEMAND_TYPE, 'KR') FROM DUAL) AS DEMAND_TYPE_NM     
		     , MD.ITEM_ID
		     , MI.ITEM_NM
		     , MI.ITEM_TYPE
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MD.COMPANY_CD,MD.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, 'KR') FROM DUAL) AS ITEM_TYPE_NM     
		     , MI.ITEM_SPEC
		     , TO_CHAR(MD.DUE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS DUE_DATE
		     , MD.QTY
		     , NVL(MWO.GOOD_QTY, 0)  AS WO_RESULT_QTY
		     , NVL(MWO.CANCEL_QTY,0) AS CANCEL_QTY
		     , MD.QTY - NVL(MWO.GOOD_QTY, 0) - NVL(MWO.CANCEL_QTY,0) AS REMAIN_QTY
		     , MD.WORK_CENTER_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_WORK_CENTER_NAME(MD.COMPANY_CD, MD.DIVISION_CD, MD.WORK_CENTER_CD) FROM DUAL) AS WORK_CENTER_NM
		     , MWO.WORK_ORDER_ID
		     , MSD.SO_NO
		     , MSD.SO_SEQ
		     , MD.UPDATE_BY
		     ,(SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MD.COMPANY_CD, MD.DIVISION_CD, MD.UPDATE_BY) FROM DUAL ) AS UPDATEBYNM
		     , TO_CHAR(MD.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
		     , CASE WHEN NVL(MWO.GOOD_QTY, 0) > 0 THEN 'N' 
		       ELSE 'Y'
		       END               AS MODIFY_YN  
		FROM   MOM_COM_DIV_V MCD
		     , MOM_DEMAND MD
		     , MOM_ITEM   MI
		     , MOM_WORK_ORDER MWO
		     , MOM_SO_DTL MSD
		WHERE  MCD.COMPANY_CD    = MD.COMPANY_CD
		AND    MCD.DIVISION_CD   = MD.DIVISION_CD
		AND    MD.COMPANY_CD     = MI.COMPANY_CD
		AND    MD.DIVISION_CD    = MI.DIVISION_CD
		AND    MD.ITEM_ID        = MI.ITEM_ID
		AND    MD.COMPANY_CD     = MWO.COMPANY_CD(+)
		AND    MD.DIVISION_CD    = MWO.DIVISION_CD(+)
		AND    MD.DEMAND_ID      = MWO.DEMAND_ID(+)
		AND    MD.COMPANY_CD     = MSD.COMPANY_CD(+)
		AND    MD.DIVISION_CD    = MSD.DIVISION_CD(+)
		AND    MD.SALES_ORDER_ID = MSD.SALES_ORDER_ID(+)
		AND    MD.COMPANY_CD     = #{companyCd, jdbcType=VARCHAR}
		AND    MD.DIVISION_CD    = #{divisionCd, jdbcType=VARCHAR}
		AND    MD.DUE_DATE BETWEEN TO_DATE(#{dueDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{dueDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999
		<if test="demandId != null and demandId != ''">
		AND (UPPER(MD.DEMAND_ID) LIKE '%' || UPPER(#{demandId , jdbcType=VARCHAR}) || '%' )
		</if>
		<if test="demandType != null and demandType != ''">
		AND MD.DEMAND_TYPE IN (${demandType})
		</if>	
		<if test="itemIdNm != null and itemIdNm != ''">
	    AND (UPPER(MD.ITEM_ID) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MI.ITEM_NM) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%')	  
		</if>
		<if test="workCenterCd != null and workCenterCd != ''">
		AND MD.WORK_CENTER_CD IN (${workCenterCd})
		</if>	
		<if test="searchRemainCheck != null and searchRemainCheck != ''">		
		  <choose>
		 	 <when test='searchRemainCheck.equals("1")'>	 	 
		    	<![CDATA[  	AND MD.QTY - NVL(MWO.GOOD_QTY, 0) - NVL(MWO.CANCEL_QTY,0) > 0	]]> 
		   	 </when>
		 	 <when test='searchRemainCheck.equals("2")'>
		  	  	<![CDATA[  AND MD.QTY - NVL(MWO.GOOD_QTY, 0) - NVL(MWO.CANCEL_QTY,0) = 0 ]]> 
		  	 </when>    
		  </choose>		
		</if>	
		ORDER BY MCD.COMPANY_NM
		       , MCD.DIVISION_NM
		       , MD.DUE_DATE
		       , MD.ITEM_ID
		       , MD.DEMAND_ID

	</select>
	<select id="get_defaultInfo2" parameterType="java.util.HashMap" resultType="com.mom.dto.LowerHashMap" fetchSize="1000">
				SELECT MB.ITEM_ID                  -- 품목
		     , MI.ITEM_NM                  -- 품명
		     , MB.WORK_CENTER_CD           -- 작업장
		     , MWC.WORK_CENTER_NM          -- 작업장명
		     , MB.PRIORITY                 -- 우선순위 
		FROM   MOM_BOR MB
		     , MOM_ITEM MI
		     , MOM_WORK_CENTER MWC
		     , MOM_ROUTING MR
		WHERE  MB.COMPANY_CD     = MI.COMPANY_CD
		AND    MB.DIVISION_CD    = MI.DIVISION_CD
		AND    MB.ITEM_ID        = MI.ITEM_ID
		AND    MB.COMPANY_CD     = MWC.COMPANY_CD
		AND    MB.DIVISION_CD    = MWC.DIVISION_CD
		AND    MB.WORK_CENTER_CD = MWC.WORK_CENTER_CD
		AND    MB.COMPANY_CD     = MR.COMPANY_CD
		AND    MB.DIVISION_CD    = MR.DIVISION_CD
		AND    MB.ROUTING_ID     = MR.ROUTING_ID
		AND    MB.USE_YN         = 'Y'
		ORDER BY MB.ITEM_ID, MB.PRIORITY
	</select>


  <insert id="create_defaultInfo1" parameterType="java.util.List">
   <foreach item="item" collection="list" index="i" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL"> 
     INTO MOM_DEMAND (
                  COMPANY_CD
                , DIVISION_CD
                , DEMAND_ID
                , SALES_ORDER_ID
                , DEMAND_TYPE
                , ITEM_ID
                , DUE_DATE
                , DUE_DATE_WEEK
                , QTY
                , PRIORITY
                , WORK_CENTER_CD
                , ALLOCATE_FLAG
                , ALLOCATE_QTY
                , DESCRIPTION
                , CREATE_BY
                , CREATE_DATE
                , UPDATE_BY
                , UPDATE_DATE )
      VALUES 
              (   #{item.companyCd, jdbcType=VARCHAR}
                , #{item.divisionCd, jdbcType=VARCHAR}
                , #{item.demandId, jdbcType=VARCHAR}
                , #{item.salesOrderId, jdbcType=VARCHAR}
                , #{item.demandType, jdbcType=VARCHAR}
                , #{item.itemId, jdbcType=VARCHAR}
                , TO_DATE(#{item.dueDate, jdbcType=VARCHAR},'YYYY-MM-DD')
                , #{item.dueDateWeek, jdbcType=VARCHAR}
                , #{item.qty, jdbcType=NUMERIC}
                , #{item.priority, jdbcType=NUMERIC}
                , #{item.workCenterCd, jdbcType=VARCHAR}
                , 'N'
                , 0
                , #{item.description, jdbcType=VARCHAR}
                , #{item.userId, jdbcType=VARCHAR}
                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
                , #{item.userId, jdbcType=VARCHAR}
                , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
              )
   </foreach>
  </insert>
     <select id="proc_defaultInfo1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.dto.LowerHashMap">  
          { CALL mom_demand_pkg.sp_create_manual_demand(   #{p_err_code, jdbcType=VARCHAR, mode=OUT}
					                                          , #{p_err_msg,  jdbcType=VARCHAR, mode=OUT}
					                                          , #{companyCd,  javaType=string,  jdbcType=VARCHAR , mode=IN}
					                                          , #{divisionCd, jdbcType=VARCHAR, mode=IN}
					                                          , #{demandType,       jdbcType=VARCHAR, mode=IN} 
					                                          , #{itemId,           jdbcType=VARCHAR, mode=IN}  
					                                          , TO_DATE(#{dueDate,  jdbcType=VARCHAR, mode=IN},'YYYY-MM-DD')
					                                          , #{qty,              jdbcType=NUMERIC, mode=IN}  
					                                          , #{priority,         jdbcType=NUMERIC, mode=IN}  
					                                          , #{workCenterCd,     jdbcType=VARCHAR, mode=IN}  
					                                          , #{description,      jdbcType=VARCHAR, mode=IN} 
					                                          , #{userId,           jdbcType=VARCHAR, mode=IN} )}    	              
  </select>  
</mapper>