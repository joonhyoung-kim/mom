<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.backend.XUPP1030">
	<select id="get_findBtn1" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap" fetchSize="1000">
	<if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
    SELECT A.*
	FROM   (
	</if>  
		    SELECT MD.COMPANY_CD
                 , MD.DIVISION_CD
                 , MD.DEMAND_ID
                 , MD.DEMAND_ID AS KEY_ID
                 , MD.DEMAND_TYPE
                 , MD.PRIORITY
                 , MD.DESCRIPTION
                 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MD.COMPANY_CD,MD.DIVISION_CD, 'PP0001', MD.DEMAND_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS DEMAND_TYPE_NM     
                 , MD.ITEM_ID
                 , MI.ITEM_NM
                 , MI.ITEM_TYPE
                 , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MD.COMPANY_CD,MD.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, #{langCd, jdbcType=VARCHAR}) FROM DUAL) AS ITEM_TYPE_NM     
                 , MI.ITEM_SPEC
                 , TO_CHAR(MD.DUE_DATE ,'YYYY-MM-DD') AS DUE_DATE
                 , MD.QTY
                 , NVL(MWO.GOOD_QTY, 0)  AS WO_RESULT_QTY
                 , NVL(MWO.CANCEL_QTY,0) AS CANCEL_QTY
                 , MD.QTY - NVL(MWO.GOOD_QTY, 0) - NVL(MWO.CANCEL_QTY,0) AS REMAIN_QTY
                 , MD.WORK_CENTER_CD
                 , (SELECT MOM_COMMON_PKG.FN_GET_WORK_CENTER_NAME(MD.COMPANY_CD, MD.DIVISION_CD, MD.WORK_CENTER_CD) FROM DUAL) AS WORK_CENTER_NM
                 , MWO.WORK_ORDER_ID
                 , MSD.SO_NO
                 , MSD.SO_SEQ
                 , MD.UPDATE_BY
                 ,(SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MD.COMPANY_CD, MD.DIVISION_CD, MD.UPDATE_BY) FROM DUAL ) AS UPDATEBYNM
                 , TO_CHAR(MD.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
                 , CASE WHEN NVL(MWO.GOOD_QTY, 0) > 0 THEN 'N' 
		           ELSE 'Y'
		           END               AS MODIFY_YN   
		         , ROWIDTOCHAR(MD.ROWID) AS GRID_ID
	             , COUNT(*) OVER() AS TOTAL_COUNT
	             , ROW_NUMBER() OVER(PARTITION BY MD.COMPANY_CD,MD.DIVISION_CD ORDER BY MD.DEMAND_ID ) AS ROW_CNT 
            FROM   MOM_DEMAND MD
                 , MOM_ITEM   MI
                 , MOM_WORK_ORDER MWO
                 , MOM_SO_DTL MSD
            WHERE  MD.COMPANY_CD     = MI.COMPANY_CD
            AND    MD.DIVISION_CD    = MI.DIVISION_CD
            AND    MD.ITEM_ID        = MI.ITEM_ID
            AND    MD.COMPANY_CD     = MWO.COMPANY_CD(+)
            AND    MD.DIVISION_CD    = MWO.DIVISION_CD(+)
            AND    MD.DEMAND_ID      = MWO.DEMAND_ID(+)
            AND    MD.COMPANY_CD     = MSD.COMPANY_CD(+)
            AND    MD.DIVISION_CD    = MSD.DIVISION_CD(+)
            AND    MD.SALES_ORDER_ID = MSD.SALES_ORDER_ID(+)
            AND    MD.COMPANY_CD     = #{companyCd, jdbcType=VARCHAR}
            AND    MD.DIVISION_CD    = #{divisionCd, jdbcType=VARCHAR}
            AND    MD.DUE_DATE BETWEEN TO_DATE(#{dueDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{dueDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999
            <if test="demandId != null and demandId != ''">
            AND (UPPER(MD.DEMAND_ID) LIKE '%' || UPPER(#{demandId , jdbcType=VARCHAR}) || '%' )
            </if>
            <if test="demandType != null and demandType != ''">
            AND MD.DEMAND_TYPE IN (${demandType})
            </if>	
            <if test="itemIdNm != null and itemIdNm != ''">
            AND (UPPER(MD.ITEM_ID) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MI.ITEM_NM) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%')	  
            </if>
            <if test="workCenterCd != null and workCenterCd != ''">
            AND MD.WORK_CENTER_CD IN (${workCenterCd})
            </if>	
            <if test="searchRemainCheck != null and searchRemainCheck != ''">		
                <choose>
                    <when test='searchRemainCheck.equals("1")'>	 	 
                    <![CDATA[  	AND MD.QTY - NVL(MWO.GOOD_QTY, 0) - NVL(MWO.CANCEL_QTY,0) > 0	]]> 
		   	        </when>
                    <when test='searchRemainCheck.equals("2")'>
                    <![CDATA[  AND MD.QTY - NVL(MWO.GOOD_QTY, 0) - NVL(MWO.CANCEL_QTY,0) = 0 ]]> 
                    </when>    
                </choose>		
            </if>
    <if test="startPage != null and startPage != '' and endPage != null and endPage != ''">
	       ) A
	WHERE ROW_CNT BETWEEN #{startPage, jdbcType=INTEGER} AND #{endPage, jdbcType=INTEGER}
	</if>
    </select>
	<select id="proc_createBtn1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.backend.dto.LowerHashMap">  
    { CALL MOM_DEMAND_PKG.SP_CREATE_MANUAL_DEMAND( #{p_err_code, jdbcType=VARCHAR, mode=OUT}
                                                 , #{p_err_msg,  jdbcType=VARCHAR, mode=OUT}
                                                 , #{companyCd,  jdbcType=VARCHAR, mode=IN}
                                                 , #{divisionCd, jdbcType=VARCHAR, mode=IN}
                                                 , #{demandType,       jdbcType=VARCHAR, mode=IN} 
                                                 , #{itemId,           jdbcType=VARCHAR, mode=IN}  
                                                 , TO_DATE(#{dueDate,  jdbcType=VARCHAR, mode=IN},'YYYY-MM-DD')
                                                 , #{qty,              jdbcType=NUMERIC, mode=IN}  
                                                 , #{priority,         jdbcType=NUMERIC, mode=IN}  
                                                 , #{workCenterCd,     jdbcType=VARCHAR, mode=IN}  
                                                 , #{description,      jdbcType=VARCHAR, mode=IN} 
                                                 , #{userId,           jdbcType=VARCHAR, mode=IN} )}    	              
    </select>  
    <update id="modify_saveBtn1" parameterType="java.util.List">      
        <foreach collection="list" item="item" separator=";" open="DECLARE BEGIN" close=";END;">
        UPDATE MOM_DEMAND 
        SET    PRIORITY    = #{item.priority, jdbcType=NUMERIC}
             , DUE_DATE    = TO_DATE(#{item.dueDate,  jdbcType=VARCHAR},'YYYY-MM-DD')       
             , DESCRIPTION = #{item.description, jdbcType=VARCHAR}
             , UPDATE_BY   = #{item.userId, jdbcType=VARCHAR}
             , UPDATE_DATE = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR})
        WHERE  COMPANY_CD  = #{item.companyCd, jdbcType=VARCHAR}
        AND    DIVISION_CD = #{item.divisionCd, jdbcType=VARCHAR}
        AND    DEMAND_ID   = #{item.demandId, jdbcType=VARCHAR}
        </foreach>                            
    </update>
</mapper>