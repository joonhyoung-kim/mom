<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.XUPP1030">
	<select id="get_findBtn1" parameterType="java.util.HashMap" resultType="com.mom.dto.LowerHashMap" fetchSize="1000">
		SELECT MCD.COMPANY_CD
		     , MCD.COMPANY_NM
		     , MCD.DIVISION_CD
		     , MCD.DIVISION_NM
		     , MD.DEMAND_ID
		     , MD.DEMAND_ID AS KEY_ID
		     , MD.DEMAND_TYPE
		     , MD.PRIORITY
             , MD.DESCRIPTION
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MD.COMPANY_CD,MD.DIVISION_CD, 'PP0001', MD.DEMAND_TYPE, 'KR') FROM DUAL) AS DEMAND_TYPE_NM     
		     , MD.ITEM_ID
		     , MI.ITEM_NM
		     , MI.ITEM_TYPE
		     , MI.LOT_MANAGEMENT_YN
		     , MI.PRICE_SYNC_YN  
		     , MI.PO_OVER_RECEIPT_RATE 
		     , (SELECT MOM_COMMON_PKG.FN_GET_CODE_NAME(MD.COMPANY_CD,MD.DIVISION_CD, 'MD0002', MI.ITEM_TYPE, 'KR') FROM DUAL) AS ITEM_TYPE_NM     
		     , MI.ITEM_SPEC
		     , TO_CHAR(MD.DUE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS DUE_DATE
		     , MD.QTY
		     , NVL(MWO.GOOD_QTY, 0)  AS WO_RESULT_QTY
		     , NVL(MWO.CANCEL_QTY,0) AS CANCEL_QTY
		     , MD.QTY - NVL(MWO.GOOD_QTY, 0) - NVL(MWO.CANCEL_QTY,0) AS REMAIN_QTY
		     , MD.WORK_CENTER_CD
		     , (SELECT MOM_COMMON_PKG.FN_GET_WORK_CENTER_NAME(MD.COMPANY_CD, MD.DIVISION_CD, MD.WORK_CENTER_CD) FROM DUAL) AS WORK_CENTER_NM
		     , MWO.WORK_ORDER_ID
		     , MSD.SO_NO
		     , MSD.SO_SEQ
		     , MD.UPDATE_BY
		     ,(SELECT MOM_COMMON_PKG.FN_GET_USER_NAME(MD.COMPANY_CD, MD.DIVISION_CD, MD.UPDATE_BY) FROM DUAL ) AS UPDATEBYNM
		     , TO_CHAR(MD.UPDATE_DATE ,'YYYY-MM-DD HH24:MI:SS') AS UPDATE_DATE
		   <!--   , CASE WHEN NVL(MWO.GOOD_QTY, 0) > 0 THEN 'N' 
		       ELSE 'Y'
		       END               AS MODIFY_YN   -->
		       ,  CASE WHEN NVL(MD.QTY,0) >100 THEN 'N'
		          ELSE 'Y'
		          END AS MODIFY_YN
		FROM   MOM_COM_DIV_V MCD
		     , MOM_DEMAND MD
		     , MOM_ITEM   MI
		     , MOM_WORK_ORDER MWO
		     , MOM_SO_DTL MSD
		WHERE  MCD.COMPANY_CD    = MD.COMPANY_CD
		AND    MCD.DIVISION_CD   = MD.DIVISION_CD
		AND    MD.COMPANY_CD     = MI.COMPANY_CD
		AND    MD.DIVISION_CD    = MI.DIVISION_CD
		AND    MD.ITEM_ID        = MI.ITEM_ID
		AND    MD.COMPANY_CD     = MWO.COMPANY_CD(+)
		AND    MD.DIVISION_CD    = MWO.DIVISION_CD(+)
		AND    MD.DEMAND_ID      = MWO.DEMAND_ID(+)
		AND    MD.COMPANY_CD     = MSD.COMPANY_CD(+)
		AND    MD.DIVISION_CD    = MSD.DIVISION_CD(+)
		AND    MD.SALES_ORDER_ID = MSD.SALES_ORDER_ID(+)
		AND    MD.COMPANY_CD     = #{companyCd, jdbcType=VARCHAR}
		AND    MD.DIVISION_CD    = #{divisionCd, jdbcType=VARCHAR}
		AND    MD.DUE_DATE BETWEEN TO_DATE(#{dueDateSD, jdbcType=VARCHAR}, 'YYYY-MM-DD')  AND TO_DATE(#{dueDateED, jdbcType=VARCHAR}, 'YYYY-MM-DD') + 0.99999
		<if test="demandId != null and demandId != ''">
		AND (UPPER(MD.DEMAND_ID) LIKE '%' || UPPER(#{demandId , jdbcType=VARCHAR}) || '%' )
		</if>
		<if test="demandType != null and demandType != ''">
		AND MD.DEMAND_TYPE IN (${demandType})
		</if>	
		<if test="itemIdNm != null and itemIdNm != ''">
	    AND (UPPER(MD.ITEM_ID) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%' OR UPPER(MI.ITEM_NM) LIKE '%' || UPPER(#{itemIdNm, jdbcType=VARCHAR}) || '%')	  
		</if>
		<if test="workCenterCd != null and workCenterCd != ''">
		AND MD.WORK_CENTER_CD IN (${workCenterCd})
		</if>	
		<if test="searchRemainCheck != null and searchRemainCheck != ''">		
		  <choose>
		 	 <when test='searchRemainCheck.equals("1")'>	 	 
		    	<![CDATA[  	AND MD.QTY - NVL(MWO.GOOD_QTY, 0) - NVL(MWO.CANCEL_QTY,0) > 0	]]> 
		   	 </when>
		 	 <when test='searchRemainCheck.equals("2")'>
		  	  	<![CDATA[  AND MD.QTY - NVL(MWO.GOOD_QTY, 0) - NVL(MWO.CANCEL_QTY,0) = 0 ]]> 
		  	 </when>    
		  </choose>		
		</if>	
		ORDER BY MCD.COMPANY_NM
		       , MCD.DIVISION_NM
		       , MD.DUE_DATE
		       , MD.ITEM_ID
		       , MD.DEMAND_ID

	</select>
	
   <select id="proc_createBtn1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.dto.LowerHashMap">  
          { CALL mom_demand_pkg.sp_create_manual_demand(   #{p_err_code, jdbcType=VARCHAR, mode=OUT}
					                                          , #{p_err_msg,  jdbcType=VARCHAR, mode=OUT}
					                                          , #{companyCd,  javaType=string,  jdbcType=VARCHAR , mode=IN}
					                                          , #{divisionCd, jdbcType=VARCHAR, mode=IN}
					                                          , #{demandType,       jdbcType=VARCHAR, mode=IN} 
					                                          , #{itemId,           jdbcType=VARCHAR, mode=IN}  
					                                          , TO_DATE(#{dueDate,  jdbcType=VARCHAR, mode=IN},'YYYY-MM-DD')
					                                          , #{qty,              jdbcType=NUMERIC, mode=IN}  
					                                          , #{priority,         jdbcType=NUMERIC, mode=IN}  
					                                          , #{workCenterCd,     jdbcType=VARCHAR, mode=IN}  
					                                          , #{description,      jdbcType=VARCHAR, mode=IN} 
					                                          , #{userId,           jdbcType=VARCHAR, mode=IN} )}    	              
  </select>  
  <select id="proc_copyBtn1" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="com.mom.dto.LowerHashMap">  
          { CALL mom_demand_pkg.sp_create_manual_demand(   #{p_err_code, jdbcType=VARCHAR, mode=OUT}
					                                          , #{p_err_msg,  jdbcType=VARCHAR, mode=OUT}
					                                          , #{companyCd,  javaType=string,  jdbcType=VARCHAR , mode=IN}
					                                          , #{divisionCd, jdbcType=VARCHAR, mode=IN}
					                                          , #{demandType,       jdbcType=VARCHAR, mode=IN} 
					                                          , #{itemId,           jdbcType=VARCHAR, mode=IN}  
					                                          , TO_DATE(#{dueDate,  jdbcType=VARCHAR, mode=IN},'YYYY-MM-DD')
					                                          , #{qty,              jdbcType=NUMERIC, mode=IN}  
					                                          , #{priority,         jdbcType=NUMERIC, mode=IN}  
					                                          , #{workCenterCd,     jdbcType=VARCHAR, mode=IN}  
					                                          , #{description,      jdbcType=VARCHAR, mode=IN} 
					                                          , #{userId,           jdbcType=VARCHAR, mode=IN} )}    	              
  </select>  
  <insert id="upsert_saveBtn1" parameterType="java.util.HashMap" flushCache="true">
      MERGE INTO MOM_DEMAND 
            USING( 
                     SELECT #{companyCd, jdbcType=VARCHAR} as companyCd,
                            #{divisionCd, jdbcType=VARCHAR} as divisionCd,
                            #{demandId, jdbcType=VARCHAR} as demandId,
                            #{salesOrderId, jdbcType=VARCHAR} as salesOrderId,
                            #{demandType, jdbcType=VARCHAR} as demandType,
                            #{itemId, jdbcType=VARCHAR} as itemId,
                            MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{companyCd, jdbcType=VARCHAR},#{divisionCd, jdbcType=VARCHAR}) as dueDate,
                            #{dueDateWeek, jdbcType=VARCHAR} as dueDateWeek,
                            #{qty, jdbcType=NUMERIC} as qty,
                            #{priority, jdbcType=NUMERIC} as priority,
                            #{workCenterCd, jdbcType=VARCHAR} as workCenterCd,
                            #{allocateFlag, jdbcType=VARCHAR} as allocateFlag,
                            #{allocateQty, jdbcType=NUMERIC} as allocateQty,
                            #{description, jdbcType=VARCHAR} as description,
                            #{userId, jdbcType=VARCHAR} as createBy,
                            MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{companyCd, jdbcType=VARCHAR},#{divisionCd, jdbcType=VARCHAR}) as createDate,
                            #{userId, jdbcType=VARCHAR} as updateBy,
                            MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{companyCd, jdbcType=VARCHAR},#{divisionCd, jdbcType=VARCHAR}) as updateDate
                     FROM DUAL
                 ) PARAM
            ON ( COMPANY_CD = PARAM.companyCd AND
                 DIVISION_CD = PARAM.divisionCd AND
                 DEMAND_ID = PARAM.demandId )
            WHEN MATCHED THEN 
                 UPDATE SET PRIORITY = PARAM.priority
                          , WORK_CENTER_CD = PARAM.workCenterCd
                          , UPDATE_BY = PARAM.updateBy
                          , UPDATE_DATE = PARAM.updateDate
            WHEN NOT MATCHED THEN
                     INSERT ( COMPANY_CD
                            , DIVISION_CD
                            , DEMAND_ID
                            , SALES_ORDER_ID
                            , DEMAND_TYPE
                            , ITEM_ID
                            , DUE_DATE
                            , DUE_DATE_WEEK
                            , QTY
                            , PRIORITY
                            , WORK_CENTER_CD
                            , ALLOCATE_FLAG
                            , ALLOCATE_QTY
                            , DESCRIPTION
                            , CREATE_BY
                            , CREATE_DATE
                            , UPDATE_BY
                            , UPDATE_DATE )
                     VALUES ( PARAM.companyCd
                            , PARAM.divisionCd
                            , PARAM.demandId
                            , PARAM.salesOrderId
                            , PARAM.demandType
                            , PARAM.itemId
                            , PARAM.dueDate
                            , PARAM.dueDateWeek
                            , PARAM.qty
                            , PARAM.priority
                            , PARAM.workCenterCd
                            , PARAM.allocateFlag
                            , PARAM.allocateQty
                            , PARAM.description
                            , PARAM.createBy
                            , PARAM.createDate
                            , PARAM.updateBy
                            , PARAM.updateDate )
  </insert>
</mapper>