<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mom.XUSM1040">		
		<select id="get_defaultInfo1" parameterType="java.util.HashMap" resultType="com.mom.dto.LowerHashMap">
		    SELECT *
			FROM     MOM_USER_V 
			WHERE    1=1
		   <if test = "userNo != null and userNo != ''">
	        AND UPPER(USER_NO) LIKE '%' || UPPER(#{userNo, jdbcType=VARCHAR}) || '%'
	       </if>
	       <if test = "userNm != null and userNm != ''">
	        AND UPPER(USER_NM)  LIKE '%' || UPPER(#{userNm, jdbcType=VARCHAR}) || '%'
	       </if>
	       <if test = "deptNm != null and deptNm != ''">
	        AND DEPT_CD  IN (${deptNm})
	       </if>
	       <if test = "authGroupNm != null and authGroupNm != ''">
	        AND AUTH_GROUP_CD  IN (${authGroupNm})
	       </if>
	       <if test = "vendorNm != null and vendorNm != ''">
	        AND UPPER(VENDOR_NM)  LIKE '%' || UPPER(#{vendorNm, jdbcType=VARCHAR}) || '%'
	       </if>
	       <if test = "useYn != null and useYn != ''">
	        AND USE_YN  = #{useYn, jdbcType=VARCHAR}
	       </if>	 
			ORDER BY USER_NO
	    </select>
	    <insert id="create_defaultInfo1" parameterType="java.util.List">  
            INSERT INTO MOM_USER (
							       COMPANY_CD
								 , DIVISION_CD
								 , USER_NO
								 , USER_NM
								 , USER_NM_ENG
								 , PASSWORD
								 , POSITION 
								 , EMAIL
								 , PHONE_NO
								 , TEL_NO
								 , FAX_NO
								 , DEPT_CD
								 , AUTH_GROUP_CD
								 , VENDOR_CD
								 , DEFAULT_LANGUAGE
								 , MAP_ADDRESS
								 , IP_ADDRESS
								 , USE_YN
								 , DESCRIPTION
								 , CREATE_BY
								 , CREATE_DATE
							 	 , UPDATE_BY
						 		 , UPDATE_DATE
		 							  )     
            VALUES(
		                <foreach item="item" collection="list" index="i" separator=" " open="">
						               #{item.companyCd,       jdbcType=VARCHAR}
						             , #{item.divisionCd,        jdbcType=VARCHAR}
						             , #{item.userNo,            jdbcType=VARCHAR}
						             , #{item.userNm,            jdbcType=INTEGER}
						             , #{item.userNmEng,         jdbcType=VARCHAR}
						             , #{item.encodePw,          jdbcType=VARCHAR} 
						             , #{item.position,          jdbcType=VARCHAR}
						             , #{item.email,             jdbcType=VARCHAR}
						             , #{item.phoneNo,           jdbcType=VARCHAR}
						             , #{item.telNo,             jdbcType=VARCHAR}
						             , #{item.faxNo,          	 jdbcType=VARCHAR}
						             , #{item.deptNm,    		 jdbcType=VARCHAR}
						             , #{item.authGroupCd, 	     jdbcType=VARCHAR}
						             , #{item.vendorCd,          jdbcType=VARCHAR}
						             , #{item.defaultLanguuage,  jdbcType=VARCHAR}
						             , #{item.mapAddress,    	 jdbcType=VARCHAR}
						             , #{item.ipAddress, 		 jdbcType=VARCHAR}
						             , #{item.useYn,             jdbcType=VARCHAR}
						             , #{item.description,       jdbcType=VARCHAR}
						             , TRIM(#{item.userId,       jdbcType=VARCHAR})
						             , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.divisionCd, jdbcType=VARCHAR}, #{item.companyCd, jdbcType=VARCHAR})
						             , TRIM(#{item.userId,       jdbcType=VARCHAR})
						             , MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.divisionCd, jdbcType=VARCHAR}, #{item.companyCd, jdbcType=VARCHAR})
					)				             
			            </foreach>			               
        </insert>
        <update id="modify_defaultInfo1" parameterType="java.util.List">     
         <foreach collection="list" item="item" separator=";" open="DECLARE BEGIN" close=";END;">
           UPDATE MOM_USER
           SET USER_NM                = #{item.userNm,              jdbcType=VARCHAR}
		     , PASSWORD               = #{item.encodePw,            jdbcType=VARCHAR}
			 , USER_NM_ENG            = #{item.userNmEng,           jdbcType=VARCHAR}
			 , AUTH_GROUP_CD		  = #{item.authGroupCd,         jdbcType=VARCHAR}
			 , DEPT_CD  	          = #{item.deptCd,              jdbcType=VARCHAR}
			 , POSITION               = #{item.position,          jdbcType=VARCHAR}			 
			 , TEL_NO                 = #{item.telNo,               jdbcType=VARCHAR}
			 , PHONE_NO               = #{item.phoneNo,             jdbcType=VARCHAR} 
			 , FAX_NO                 = #{item.faxNo,               jdbcType=VARCHAR}
			 , EMAIL                  = #{item.email,               jdbcType=VARCHAR}
			 , MAP_ADDRESS            = #{item.mapAddress,          jdbcType=VARCHAR}
			 , IP_ADDRESS             = #{item.ipAddress,           jdbcType=VARCHAR}
			 , VENDOR_CD              = #{item.vendorNm,            jdbcType=VARCHAR}
			 , USE_YN                 = #{item.useYn,               jdbcType=VARCHAR}
			 , DESCRIPTION            = #{item.description,         jdbcType=VARCHAR}
		     , UPDATE_BY              = #{item.userId,              jdbcType=VARCHAR}
		     , UPDATE_DATE            = MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.divisionCd, jdbcType=VARCHAR}, #{item.companyCd, jdbcType=VARCHAR})		     
         <where>
                COMPANY_CD    = #{item.companyCd,   jdbcType=VARCHAR}
            AND DIVISION_CD   = #{item.divisionCd,  jdbcType=VARCHAR}
            AND USER_NO       = #{item.userNo,      jdbcType=VARCHAR}
         </where>
      </foreach>
      </update> 
      <delete id = "remove_defaultInfo1" parameterType ="java.util.List">
                DELETE FROM MOM_USER 
               <where>
               <foreach collection="list" item="item"  open="" separator="OR" close="">
               (      COMPANY_CD    = #{item.companyCd,   jdbcType=VARCHAR}
                  AND DIVISION_CD   = #{item.divisionCd,  jdbcType=VARCHAR}
                  AND USER_NO       = #{item.userNo,      jdbcType=VARCHAR}
               )      
             </foreach>
            </where>  
      </delete>
  <insert id="upsert_defaultInfo1" parameterType="java.util.List">
      MERGE INTO MOM_USER 
            USING( <foreach item="item" collection="list" index="i" separator="UNION" open="" close="">
                     SELECT #{item.companyCd, jdbcType=VARCHAR} as companyCd,
                            #{item.divisionCd, jdbcType=VARCHAR} as divisionCd,
                            #{item.userNo, jdbcType=VARCHAR} as userNo,
                            #{item.userNm, jdbcType=VARCHAR} as userNm,
                            #{item.userNmEng, jdbcType=VARCHAR} as userNmEng,
                             '$2a$12$IXT9LU0ClgO7x27zPXXoeOF9qGCloK7pwGNnDqdpahq6iBNSvv3.y' as password,
                            #{item.position, jdbcType=VARCHAR} as position,
                            #{item.email, jdbcType=VARCHAR} as email,
                            #{item.phoneNo, jdbcType=VARCHAR} as phoneNo,
                            #{item.telNo, jdbcType=VARCHAR} as telNo,
                            #{item.faxNo, jdbcType=VARCHAR} as faxNo,
                            #{item.deptCd, jdbcType=VARCHAR} as deptCd,
                            #{item.authGroupCd, jdbcType=VARCHAR} as authGroupCd,
                            #{item.vendorCd, jdbcType=VARCHAR} as vendorCd,
                            #{item.defaultLanguage, jdbcType=VARCHAR} as defaultLanguage,
                            #{item.mapAddress, jdbcType=VARCHAR} as mapAddress,
                            #{item.ipAddress, jdbcType=VARCHAR} as ipAddress,
                            #{item.useYn, jdbcType=VARCHAR} as useYn,
                            #{item.description, jdbcType=VARCHAR} as description,
                            #{item.userId, jdbcType=VARCHAR} as createBy,
                            MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR}) as createDate,
                            #{item.userId, jdbcType=VARCHAR} as updateBy,
                            MOM_COMMON_PKG.FN_GET_LOCAL_TIME(#{item.companyCd, jdbcType=VARCHAR},#{item.divisionCd, jdbcType=VARCHAR}) as updateDate
                     FROM DUAL
                   </foreach> ) PARAM
            ON ( COMPANY_CD = PARAM.companyCd AND
                 DIVISION_CD = PARAM.divisionCd AND
                 USER_NO = PARAM.userNo )
            WHEN MATCHED THEN 
                  UPDATE SET USER_NM = USER_NM
                        
            WHEN NOT MATCHED THEN
                     INSERT ( COMPANY_CD
                            , DIVISION_CD
                            , USER_NO
                            , USER_NM
                            , USER_NM_ENG
                            , PASSWORD
                            , POSITION
                            , EMAIL
                            , PHONE_NO
                            , TEL_NO
                            , FAX_NO
                            , DEPT_CD
                            , AUTH_GROUP_CD
                            , VENDOR_CD
                            , DEFAULT_LANGUAGE
                            , MAP_ADDRESS
                            , IP_ADDRESS
                            , USE_YN
                            , DESCRIPTION
                            , CREATE_BY
                            , CREATE_DATE
                            , UPDATE_BY
                            , UPDATE_DATE )
                     VALUES ( PARAM.companyCd
                            , PARAM.divisionCd
                            , PARAM.userNo
                            , PARAM.userNm
                            , PARAM.userNmEng
                            , PARAM.password
                            , PARAM.position
                            , PARAM.email
                            , PARAM.phoneNo
                            , PARAM.telNo
                            , PARAM.faxNo
                            , PARAM.deptCd
                            , PARAM.authGroupCd
                            , PARAM.vendorCd
                            , PARAM.defaultLanguage
                            , PARAM.mapAddress
                            , PARAM.ipAddress
                            , PARAM.useYn
                            , PARAM.description
                            , PARAM.createBy
                            , PARAM.createDate
                            , PARAM.updateBy
                            , PARAM.updateDate )
  </insert>      
</mapper>